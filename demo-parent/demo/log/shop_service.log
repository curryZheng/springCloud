[ INFO ] [2019-01-23 10:17:37] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973: startup date [Wed Jan 23 10:17:37 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 10:17:37] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 10:17:38] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:17:38] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$834e39da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:17:39] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 10:17:39] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 10:17:39] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:17:39] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 10:17:40] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 10:17:41] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548209861001 with initial instances count: 1
[ INFO ] [2019-01-23 10:17:41] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 10:17:43] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 10:17:43] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 10:17:43] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 10:17:43] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a98f353: startup date [Wed Jan 23 10:17:43 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
[ INFO ] [2019-01-23 10:17:49] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=766a47fc-f4bf-36cb-98d2-1279e6761622
[ INFO ] [2019-01-23 10:17:49] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:17:49] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:17:49] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$673436dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:17:50] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$9960dd1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:17:50] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$834e39da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:17:51] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 10:17:51] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 10:17:51] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 10:17:51] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 10:17:51] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 7771 ms
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 10:17:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 10:17:53] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@35995029: startup date [Wed Jan 23 10:17:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a98f353
[ INFO ] [2019-01-23 10:17:54] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:18:11] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - Re-registering apps/DEMO-SHOP-SERVICE
[ INFO ] [2019-01-23 10:18:11] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 10:18:12] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 10:18:15] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 10:18:15] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 10:18:15] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 10:18:15] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 10:18:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 10:18:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 10:18:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 10:18:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 10:18:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 10:18:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 10:18:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 10:18:17] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ WARN ] [2019-01-23 10:18:18] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 10:18:18] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 10:18:18] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 10:18:18] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 10:18:18] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a98f353: startup date [Wed Jan 23 10:17:43 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973
[ INFO ] [2019-01-23 10:18:18] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:18:18] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:18:18] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:18:19] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a98f353: startup date [Wed Jan 23 10:17:43 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@340b9973] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 10:18:19] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 10:18:20] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 10:18:20] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 10:18:20] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 10:18:20] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6a98f353,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 10:18:21] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 10:18:21] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 10:18:22] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 10:18:22] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548209902432 with initial instances count: 1
[ INFO ] [2019-01-23 10:18:22] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548209902466, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 10:18:22] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 10:18:22] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 10:18:22] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 10:18:22] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 10:18:22] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 10:18:24] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:18:24] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:18:24] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 10:18:24] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 10:18:24] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 10:18:24] com.demo.shop.ShopApplication -Started ShopApplication in 47.796 seconds (JVM running for 51.252)
[ INFO ] [2019-01-23 10:23:22] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:31:05] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 10:31:05 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 10:31:06] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 10:31:06] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:31:06] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$367c0303] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:31:07] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 10:31:07] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 10:31:07] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:31:07] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:31:07] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 10:31:07] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 10:31:08] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548210668726 with initial instances count: 1
[ INFO ] [2019-01-23 10:31:09] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 10:31:10] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 10:31:10] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 10:31:10] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 10:31:10] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57151b3a: startup date [Wed Jan 23 10:31:10 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 10:31:14] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=766a47fc-f4bf-36cb-98d2-1279e6761622
[ INFO ] [2019-01-23 10:31:14] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:31:14] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:31:14] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1a620006] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:31:14] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$4c8ea647] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:31:14] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$367c0303] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:31:15] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 10:31:15] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 10:31:15] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 10:31:16] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 10:31:16] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 5303 ms
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 10:31:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 10:31:17] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3ef396c9: startup date [Wed Jan 23 10:31:17 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57151b3a
[ INFO ] [2019-01-23 10:31:17] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:31:21] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 10:31:21] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 10:31:21] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 10:31:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 10:31:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 10:31:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 10:31:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 10:31:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 10:31:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 10:31:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 10:31:22] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:31:23] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ WARN ] [2019-01-23 10:31:25] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 10:31:25] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 10:31:25] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 10:31:25] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 10:31:25] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57151b3a: startup date [Wed Jan 23 10:31:10 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 10:31:26] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:31:26] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:31:26] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:31:27] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@57151b3a: startup date [Wed Jan 23 10:31:10 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 10:31:27] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 10:31:28] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 10:31:28] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 10:31:28] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 404
[ INFO ] [2019-01-23 10:31:28] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=57151b3a,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 10:31:28] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 10:31:28] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 10:31:30] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 10:31:30] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548210690360 with initial instances count: 1
[ INFO ] [2019-01-23 10:31:30] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548210690449, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 10:31:30] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 10:31:30] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 10:31:30] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 10:31:30] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 10:31:30] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 10:31:31] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:31:31] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:31:31] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 10:31:31] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 10:31:31] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 10:31:31] com.demo.shop.ShopApplication -Started ShopApplication in 27.298 seconds (JVM running for 28.483)
[ INFO ] [2019-01-23 10:34:29] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 10:34:29 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 10:34:29] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 10:34:29] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:34:29] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$407ed044] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:34:30] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 10:34:31] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 10:34:31] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:34:31] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:34:31] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 10:34:31] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 10:34:32] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548210872435 with initial instances count: 4
[ INFO ] [2019-01-23 10:34:33] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 10:34:33] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 10:34:33] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 10:34:33] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 10:34:33] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc64028: startup date [Wed Jan 23 10:34:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 10:34:35] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=766a47fc-f4bf-36cb-98d2-1279e6761622
[ INFO ] [2019-01-23 10:34:36] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:34:36] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:34:36] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2464cd47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:34:36] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$56917388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:34:36] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$407ed044] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:34:37] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 10:34:37] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 10:34:37] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 10:34:37] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 10:34:37] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 4319 ms
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 10:34:38] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@30a20fb3: startup date [Wed Jan 23 10:34:38 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc64028
[ INFO ] [2019-01-23 10:34:39] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 10:34:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:34:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ WARN ] [2019-01-23 10:34:44] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 10:34:44] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 10:34:44] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 10:34:44] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 10:34:45] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc64028: startup date [Wed Jan 23 10:34:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 10:34:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:34:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:34:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:34:46] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc64028: startup date [Wed Jan 23 10:34:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 10:34:46] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 10:34:47] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 10:34:47] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 10:34:47] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 10:34:47] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6cc64028,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 10:34:48] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 10:34:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 10:34:49] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 10:34:49] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548210889596 with initial instances count: 4
[ INFO ] [2019-01-23 10:34:49] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548210889632, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 10:34:49] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 10:34:49] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 10:34:49] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 10:34:49] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 10:34:49] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 10:34:50] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:34:50] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ ERROR] [2019-01-23 10:34:50] org.apache.coyote.http11.Http11NioProtocol -Failed to start end point associated with ProtocolHandler ["http-nio-6612"]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:990)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:635)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:22)
[ ERROR] [2019-01-23 10:34:50] org.apache.catalina.core.StandardService -Failed to start connector [Connector[HTTP/1.1-6612]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-6612]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1029)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:990)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:635)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1022)
	... 14 common frames omitted
[ INFO ] [2019-01-23 10:34:50] org.apache.coyote.http11.Http11NioProtocol -Pausing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:34:50] org.apache.catalina.core.StandardService -Stopping service [Tomcat]
[ INFO ] [2019-01-23 10:34:50] org.apache.catalina.util.LifecycleBase -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
[ INFO ] [2019-01-23 10:34:50] org.apache.coyote.http11.Http11NioProtocol -Stopping ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:34:50] org.apache.coyote.http11.Http11NioProtocol -Destroying ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:34:50] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2019-01-23 10:34:50] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 6612 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 6612, or configure this application to listen on another port.

[ INFO ] [2019-01-23 10:34:50] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc64028: startup date [Wed Jan 23 10:34:33 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 10:34:50] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Unregistering application demo-shop-service with eureka with status DOWN
[ WARN ] [2019-01-23 10:34:50] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548210890474, current=DOWN, previous=UP]
[ INFO ] [2019-01-23 10:34:50] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 10:34:50] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 10:34:50] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 10:34:50] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 10:34:50] org.springframework.context.support.DefaultLifecycleProcessor -Stopping beans in phase 2147483647
[ INFO ] [2019-01-23 10:34:50] org.springframework.context.support.DefaultLifecycleProcessor -Stopping beans in phase 0
[ INFO ] [2019-01-23 10:34:50] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Unregistering JMX-exposed beans on shutdown
[ INFO ] [2019-01-23 10:34:50] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Unregistering JMX-exposed beans
[ INFO ] [2019-01-23 10:34:50] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Unregistering JMX-exposed beans on shutdown
[ INFO ] [2019-01-23 10:34:50] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Unregistering JMX-exposed beans
[ INFO ] [2019-01-23 10:34:50] org.springframework.context.annotation.AnnotationConfigApplicationContext -Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@30a20fb3: startup date [Wed Jan 23 10:34:38 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cc64028
[ WARN ] [2019-01-23 10:34:50] org.springframework.context.annotation.AnnotationConfigApplicationContext -Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'sqlSessionFactory': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:235)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:192)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:22)
[ INFO ] [2019-01-23 10:35:00] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - Re-registering apps/DEMO-SHOP-SERVICE
[ INFO ] [2019-01-23 10:35:00] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 10:35:00] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 10:35:39] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 10:35:39 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 10:35:40] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 10:35:40] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:35:40] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6cd52c21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:35:41] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 10:35:41] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 10:35:41] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:35:41] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:35:41] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 10:35:41] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 10:35:42] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548210942758 with initial instances count: 4
[ INFO ] [2019-01-23 10:35:43] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 10:35:44] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 10:35:44] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 10:35:44] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 10:35:44] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@374c40ba: startup date [Wed Jan 23 10:35:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 10:35:46] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=766a47fc-f4bf-36cb-98d2-1279e6761622
[ INFO ] [2019-01-23 10:35:47] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:35:47] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:35:47] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50bb2924] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:35:47] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$82e7cf65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:35:47] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6cd52c21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 10:35:48] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 10:35:48] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 10:35:48] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 10:35:49] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 10:35:49] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 4879 ms
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 10:35:49] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 10:35:50] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@486dd616: startup date [Wed Jan 23 10:35:50 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@374c40ba
[ INFO ] [2019-01-23 10:35:50] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 10:35:53] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 10:35:54] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ WARN ] [2019-01-23 10:35:55] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 10:35:55] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 10:35:55] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 10:35:55] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 10:35:56] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@374c40ba: startup date [Wed Jan 23 10:35:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 10:35:56] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:35:56] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:35:56] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 10:35:57] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@374c40ba: startup date [Wed Jan 23 10:35:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 10:35:57] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 10:35:58] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 10:35:58] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 10:35:58] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 10:35:58] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 10:35:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 10:35:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=374c40ba,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 10:35:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 10:35:59] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 10:36:00] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 10:36:00] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 10:36:00] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 10:36:00] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:36:00] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 10:36:00] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 10:36:00] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 10:36:00] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:36:00] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 10:36:00] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548210961031 with initial instances count: 3
[ INFO ] [2019-01-23 10:36:01] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548210961066, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 10:36:01] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 10:36:01] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 10:36:01] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 10:36:01] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 10:36:01] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 10:36:01] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:36:01] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 10:36:01] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 10:36:01] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 10:36:01] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 10:36:01] com.demo.shop.ShopApplication -Started ShopApplication in 22.805 seconds (JVM running for 23.776)
[ INFO ] [2019-01-23 10:36:56] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-23 10:36:56] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-23 10:36:56] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
[ INFO ] [2019-01-23 10:36:56] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 35c5fc204b3c415babd5549f40d931fc] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:36:56] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 38b0da270ebe47bbb7c5931d4e701b73] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ WARN ] [2019-01-23 10:36:57] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ DEBUG] [2019-01-23 10:37:02] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:37:02] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:37:02] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:37:02] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:37:02] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:37:02] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:37:02] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:37:02] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6f5cd54e: startup date [Wed Jan 23 10:37:02 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@374c40ba
[ INFO ] [2019-01-23 10:37:02] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 10:37:03] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 10:37:03] com.netflix.util.concurrent.ShutdownEnabledTimer -Shutdown hook installed for: NFLoadBalancer-PingTimer-demo-user-service
[ INFO ] [2019-01-23 10:37:03] com.netflix.loadbalancer.BaseLoadBalancer -Client: demo-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[ INFO ] [2019-01-23 10:37:03] com.netflix.loadbalancer.DynamicServerListLoadBalancer -Using serverListUpdater PollingServerListUpdater
[ INFO ] [2019-01-23 10:37:03] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 10:37:03] com.netflix.loadbalancer.DynamicServerListLoadBalancer -DynamicServerListLoadBalancer for client demo-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[10.10.1.210:6608],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.10.1.210:6608;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@352d0c3e
[ INFO ] [2019-01-23 10:37:04] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 10:37:08] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 38b0da270ebe47bbb7c5931d4e701b73] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 11453]
[ INFO ] [2019-01-23 10:37:08] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 35c5fc204b3c415babd5549f40d931fc] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 11633] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:37:12] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : afd5e47ff9784e9c908263f0a70b93af] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:37:12] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : d46b065b6cdc47e48e732194ff96b702] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:37:12] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:37:12] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:37:12] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:37:12] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:37:12] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:37:12] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:37:12] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:37:12] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : d46b065b6cdc47e48e732194ff96b702] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 361]
[ INFO ] [2019-01-23 10:37:12] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : afd5e47ff9784e9c908263f0a70b93af] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 363] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:41:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:46:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:51:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:51:20] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 8ae733b12da54a8a950abf394539ea7c] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:20] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 48b59d047d8a469c87f54b0cdb63108f] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:51:20] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:51:20] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:51:20] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:51:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:51:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:51:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:51:20] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:51:20] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 48b59d047d8a469c87f54b0cdb63108f] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 388]
[ INFO ] [2019-01-23 10:51:20] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 8ae733b12da54a8a950abf394539ea7c] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 390] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:26] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4e658b27046749eaa297af481fb18d16] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:26] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 679d3b02da4b4d55989e9872459528c4] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:51:26] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:51:26] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:51:26] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:51:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:51:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:51:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:51:26] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:51:26] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 679d3b02da4b4d55989e9872459528c4] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 332]
[ INFO ] [2019-01-23 10:51:26] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4e658b27046749eaa297af481fb18d16] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 340] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:28] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 099175a74da84e128b5c7d3b9a500e3f] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:28] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : bf2b480d97c141c6ade344d5300e77af] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:51:28] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:51:28] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:51:28] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:51:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:51:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:51:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:51:28] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:51:28] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : bf2b480d97c141c6ade344d5300e77af] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 341]
[ INFO ] [2019-01-23 10:51:28] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 099175a74da84e128b5c7d3b9a500e3f] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 349] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:29] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 27b26d6224f64d9786f3190a5ccf1afb] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:29] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : df492ba2a9964548ad88d482f0335b4a] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:51:29] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:51:29] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:51:29] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:51:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:51:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:51:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:51:29] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:51:29] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : df492ba2a9964548ad88d482f0335b4a] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 348]
[ INFO ] [2019-01-23 10:51:29] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 27b26d6224f64d9786f3190a5ccf1afb] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 351] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:30] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 7703894215c74938bdff2128a1d44ce9] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:51:30] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : a0317414c32e4577abdf61d50fef6e26] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:51:30] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:51:30] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:51:30] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:51:30] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:51:30] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:51:30] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:51:30] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:51:30] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : a0317414c32e4577abdf61d50fef6e26] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 335]
[ INFO ] [2019-01-23 10:51:30] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 7703894215c74938bdff2128a1d44ce9] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 344] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:55:25] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 5395d6fb6f5b4b2884311096caf9d1fd] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:55:25] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : afa40398584443a499dfcf31fd713fed] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:55:25] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:55:25] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:55:25] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:55:25] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:55:25] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:55:25] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:55:25] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:55:25] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : afa40398584443a499dfcf31fd713fed] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 367]
[ INFO ] [2019-01-23 10:55:25] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 5395d6fb6f5b4b2884311096caf9d1fd] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 382] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:55:27] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : b0239d5939cc4ff79eedb620635196c2] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:55:27] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : be91da591ec14ece86d52e21c7a46d9a] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:55:27] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:55:27] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:55:27] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:55:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:55:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:55:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:55:27] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:55:27] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : be91da591ec14ece86d52e21c7a46d9a] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 340]
[ INFO ] [2019-01-23 10:55:27] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : b0239d5939cc4ff79eedb620635196c2] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 342] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 10:56:13] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 8636fbd06a1b432d920f033701abc4e4] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:13] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2bcf459414d54b7088a4c49eb427dc8a] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:13] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:13] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:13] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:13] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:13] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2bcf459414d54b7088a4c49eb427dc8a] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 322]
[ INFO ] [2019-01-23 10:56:13] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 8636fbd06a1b432d920f033701abc4e4] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 330] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:15] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4925f047d1d54b9fb2a07162d044d205] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:15] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : eab2cf808ab5473991d11c5da3eacfec] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:15] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:15] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:15] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:15] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:15] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : eab2cf808ab5473991d11c5da3eacfec] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 328]
[ INFO ] [2019-01-23 10:56:15] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4925f047d1d54b9fb2a07162d044d205] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 329] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:16] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : aa4aebc4596e4f768fb9128e02b56248] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:16] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : c411cb727b6c45deb611b2e8bf10f473] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:16] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:16] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:16] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:16] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:16] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:16] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:16] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:16] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : c411cb727b6c45deb611b2e8bf10f473] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 363]
[ INFO ] [2019-01-23 10:56:16] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : aa4aebc4596e4f768fb9128e02b56248] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 368] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:17] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e1f6379de15741b194093e7e52c49ad6] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:17] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 0f81bdaf0d7549c4a4c40f40fbb4f85a] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:17] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:17] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:17] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:17] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:17] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:17] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:17] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:17] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 0f81bdaf0d7549c4a4c40f40fbb4f85a] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 326]
[ INFO ] [2019-01-23 10:56:17] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e1f6379de15741b194093e7e52c49ad6] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 331] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:18] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : c8b3ecfeb3684f049776407e1cf597ee] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:18] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : ac807da8432044928e83f295f8d80d0d] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:18] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:18] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:18] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:18] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:19] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : ac807da8432044928e83f295f8d80d0d] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 314]
[ INFO ] [2019-01-23 10:56:19] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : c8b3ecfeb3684f049776407e1cf597ee] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 323] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:19] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : d0cc3c924ccd4861bef61e643fe2c696] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:19] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 592fc5799b6940e1aa15553fa3fb252d] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:20] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:20] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:20] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:20] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:20] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 592fc5799b6940e1aa15553fa3fb252d] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 569]
[ INFO ] [2019-01-23 10:56:20] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : d0cc3c924ccd4861bef61e643fe2c696] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 571] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:22] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4618e65808b146b9b029bd55a56dd8b0] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:22] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2f37dbe275724aa79be6101f3f139404] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:22] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:22] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:22] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:22] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:22] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:22] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:22] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:22] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2f37dbe275724aa79be6101f3f139404] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 318]
[ INFO ] [2019-01-23 10:56:22] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4618e65808b146b9b029bd55a56dd8b0] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 321] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:23] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 7810b1acb50d4534a7c3059131921702] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:23] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 650c14c283194325b3977c84041d7537] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:23] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:23] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:23] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:23] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:23] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:23] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:23] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:23] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 650c14c283194325b3977c84041d7537] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 321]
[ INFO ] [2019-01-23 10:56:23] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 7810b1acb50d4534a7c3059131921702] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 325] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:24] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 62ba785fa6824e12a08d106d50756fa9] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:24] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 5e920ba56acc46bda25786682e9ae34f] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:24] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:24] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:24] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:24] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:24] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:24] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:24] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:24] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 5e920ba56acc46bda25786682e9ae34f] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 314]
[ INFO ] [2019-01-23 10:56:24] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 62ba785fa6824e12a08d106d50756fa9] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 314] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:25] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f974e22ff59543a8a9129e30ceb013aa] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:25] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 9ed6582a76ae48b4862513f2f8ef4c47] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:25] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:25] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:25] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:25] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:25] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:25] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:25] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:25] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 9ed6582a76ae48b4862513f2f8ef4c47] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 319]
[ INFO ] [2019-01-23 10:56:25] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f974e22ff59543a8a9129e30ceb013aa] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 320] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:26] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : cc0f88089a7843dbabbf26cb1554a9e2] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:26] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2a6aaebddb274b74ace43e5a10d3990e] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:26] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:26] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:26] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:26] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:26] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2a6aaebddb274b74ace43e5a10d3990e] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 321]
[ INFO ] [2019-01-23 10:56:26] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : cc0f88089a7843dbabbf26cb1554a9e2] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 327] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:27] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 77afc10525444c8eb618bdd4b3170c20] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:27] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 1bc6dd24a718429d94a542bbc48886d2] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:27] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 1bc6dd24a718429d94a542bbc48886d2] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 316]
[ INFO ] [2019-01-23 10:56:27] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 77afc10525444c8eb618bdd4b3170c20] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 318] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:27] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : c1b7788c99e24df28c7baa37f8742d13] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:27] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 5d2a99e7a0e2474797e574bc0242b28d] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:27] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:27] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 5d2a99e7a0e2474797e574bc0242b28d] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 330]
[ INFO ] [2019-01-23 10:56:27] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : c1b7788c99e24df28c7baa37f8742d13] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 330] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:28] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 6712bd5dfdd54fc69ed11e3a9f0e62c3] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:28] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 440c8ba7b5184ad1bf4280a6a47884a7] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:28] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 440c8ba7b5184ad1bf4280a6a47884a7] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 315]
[ INFO ] [2019-01-23 10:56:28] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 6712bd5dfdd54fc69ed11e3a9f0e62c3] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 315] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:28] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e956d1fe285c4064aa7b8aa55d47a824] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:56:28] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2d312023b3f8428281e87be05283b0ce] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:56:28] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:56:29] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:56:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:56:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:56:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:56:29] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:56:29] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2d312023b3f8428281e87be05283b0ce] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 343]
[ INFO ] [2019-01-23 10:56:29] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e956d1fe285c4064aa7b8aa55d47a824] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 343] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:58:37] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 1ee6ccbc67884c98af53912568a77c3f] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 10:58:37] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 89e781b22d804369b82a234c39fdbe40] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 10:58:37] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 10:58:37] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 10:58:37] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 10:58:37] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 10:58:37] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 10:58:37] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 10:58:37] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 10:58:37] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 89e781b22d804369b82a234c39fdbe40] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 329]
[ INFO ] [2019-01-23 10:58:37] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 1ee6ccbc67884c98af53912568a77c3f] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 332] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:01:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:06:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:08:51] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 7e6e02a6c35b41cc914edfcc0ca3693d] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:08:51] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 85ce5eb9564341089880e0407190e38e] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:08:51] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:08:51] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:08:52] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:08:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:08:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:08:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:08:52] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:08:52] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 85ce5eb9564341089880e0407190e38e] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 330]
[ INFO ] [2019-01-23 11:08:52] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 7e6e02a6c35b41cc914edfcc0ca3693d] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 332] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:10:10] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 3766212c01464b29a252e98f4f7fd09d] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:10:10] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : df01eb3466ac441483188026f81f8a3d] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:10:10] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:10:10] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:10:10] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:10:10] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:10:10] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:10:10] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:10:10] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:10:10] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : df01eb3466ac441483188026f81f8a3d] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 323]
[ INFO ] [2019-01-23 11:10:10] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 3766212c01464b29a252e98f4f7fd09d] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 325] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:11:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:13:00] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 646f0b2ae7224f2d9f81c17fc75e1996] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:13:00] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : a55ec23ae3834659b07aec5a4609d474] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:13:00] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:13:00] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:13:00] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:13:00] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:13:00] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:13:00] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:13:00] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:13:00] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : a55ec23ae3834659b07aec5a4609d474] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 349]
[ INFO ] [2019-01-23 11:13:00] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 646f0b2ae7224f2d9f81c17fc75e1996] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 356] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:16:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:17:58] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 94ec80360b6c4bac8d1df35e687209d9] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:17:58] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 90ac64c8febb4c71a42754bd0194e02f] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:17:58] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:17:58] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:17:58] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:17:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:17:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:17:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:17:58] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:18:02] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 90ac64c8febb4c71a42754bd0194e02f] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 3780]
[ INFO ] [2019-01-23 11:18:02] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 94ec80360b6c4bac8d1df35e687209d9] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 3841] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:18:07] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 343c877d343f48a18586a38f874f3c9c] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:18:07] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 0fb49c9ccb11444e9109de84371d4104] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:18:08] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:18:08] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:18:08] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:18:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:18:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:18:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:18:08] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:18:08] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 0fb49c9ccb11444e9109de84371d4104] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 410]
[ INFO ] [2019-01-23 11:18:08] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 343c877d343f48a18586a38f874f3c9c] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 412] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:18:21] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 5dfde866fe734008887855120e751c75] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:18:21] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 6cb0828ce4554c21a027ef9bc13310df] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:18:21] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:18:21] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:18:21] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:18:21] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:18:21] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:18:21] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:18:21] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:18:22] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 6cb0828ce4554c21a027ef9bc13310df] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 623]
[ INFO ] [2019-01-23 11:18:22] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 5dfde866fe734008887855120e751c75] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 624] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:21:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:26:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:28:22] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 87350ffa0d0448da8a4d375152122ced] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:28:22] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 323c6f5639684a9daa4eb8c99d453aa2] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:28:23] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:28:23] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:28:23] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:28:23] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:28:23] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:28:23] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:28:23] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:28:24] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 323c6f5639684a9daa4eb8c99d453aa2] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1981]
[ INFO ] [2019-01-23 11:28:24] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 87350ffa0d0448da8a4d375152122ced] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 2017] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:28:44] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 47f25ad57c434157877f6348922ef85f] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:28:44] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : aedca27672d94ad1ac6a2d021846c06e] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:28:44] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:28:44] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:28:45] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:28:45] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:28:45] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:28:45] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:28:45] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:28:46] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : aedca27672d94ad1ac6a2d021846c06e] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1292]
[ INFO ] [2019-01-23 11:28:46] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 47f25ad57c434157877f6348922ef85f] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1295] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:28:49] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : b9617a186f4049a1af4135a7b544c7d4] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:28:49] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 59aea42df78a4f13a55da0a589795e9f] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:28:49] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:28:49] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:28:49] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:28:49] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:28:49] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:28:49] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:28:49] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:28:50] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 59aea42df78a4f13a55da0a589795e9f] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 392]
[ INFO ] [2019-01-23 11:28:50] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : b9617a186f4049a1af4135a7b544c7d4] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 395] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:28:59] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : c5115d6d2e0046f990be9628eeed37ed] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:28:59] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 43aa6f45dcd044369cad24f7a0cb0d9b] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:28:59] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:28:59] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:28:59] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:28:59] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:28:59] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:28:59] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:28:59] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:28:59] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 43aa6f45dcd044369cad24f7a0cb0d9b] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 329]
[ INFO ] [2019-01-23 11:28:59] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : c5115d6d2e0046f990be9628eeed37ed] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 334] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:29:46] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 588b9e28614e48c1a55b640325e6e97d] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:29:46] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 411de6dd52a644a5b87119bcc5934474] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:29:46] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:29:46] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:29:46] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:29:46] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:29:46] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:29:46] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:29:46] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ ERROR] [2019-01-23 11:29:53] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 411de6dd52a644a5b87119bcc5934474] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 6186]
com.netflix.hystrix.exception.HystrixRuntimeException: UserApiService#queryUserById(QueryShopById) failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:819)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:804)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$2.onError(AbstractCommand.java:1194)
	at rx.internal.operators.OperatorSubscribeOn$1$1.onError(OperatorSubscribeOn.java:59)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: feign.RetryableException: connect timed out executing POST http://demo-user-service/user//queryUserById
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 26 common frames omitted
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1169)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1105)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:999)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:933)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1283)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1258)
	at feign.Client$Default.convertAndSend(Client.java:133)
	at feign.Client$Default.execute(Client.java:73)
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:80)
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:48)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:109)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 31 common frames omitted
[ INFO ] [2019-01-23 11:29:53] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 588b9e28614e48c1a55b640325e6e97d] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 7175] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:30:05] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 37ec2618165f4945b596b3436c6ed87f] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:30:05] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2a297299d47248e3933abe05afa6fd9e] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:30:05] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:30:05] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:30:05] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:30:05] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:30:05] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:30:05] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:30:05] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ ERROR] [2019-01-23 11:30:06] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 2a297299d47248e3933abe05afa6fd9e] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 809]
com.netflix.hystrix.exception.HystrixRuntimeException: UserApiService#queryUserById(QueryShopById) failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:819)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:804)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$2.onError(AbstractCommand.java:1194)
	at rx.internal.operators.OperatorSubscribeOn$1$1.onError(OperatorSubscribeOn.java:59)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: feign.RetryableException: connect timed out executing POST http://demo-user-service/user//queryUserById
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 26 common frames omitted
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1169)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1105)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:999)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:933)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1283)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1258)
	at feign.Client$Default.convertAndSend(Client.java:133)
	at feign.Client$Default.execute(Client.java:73)
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:80)
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:48)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:109)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 31 common frames omitted
[ INFO ] [2019-01-23 11:30:06] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 37ec2618165f4945b596b3436c6ed87f] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 813] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:30:08] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 36361a0ccb7c465b988ee1a5046a0c4e] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:30:08] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 30729aa30a64471ea426e4d7e46a3aa7] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:30:08] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:30:08] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:30:08] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:30:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:30:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:30:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:30:08] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ ERROR] [2019-01-23 11:30:08] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : 30729aa30a64471ea426e4d7e46a3aa7] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 641]
com.netflix.hystrix.exception.HystrixRuntimeException: UserApiService#queryUserById(QueryShopById) failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:819)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:804)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$2.onError(AbstractCommand.java:1194)
	at rx.internal.operators.OperatorSubscribeOn$1$1.onError(OperatorSubscribeOn.java:59)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: feign.RetryableException: connect timed out executing POST http://demo-user-service/user//queryUserById
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 26 common frames omitted
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1169)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1105)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:999)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:933)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1283)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1258)
	at feign.Client$Default.convertAndSend(Client.java:133)
	at feign.Client$Default.execute(Client.java:73)
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:80)
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:48)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:109)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 31 common frames omitted
[ INFO ] [2019-01-23 11:30:08] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 36361a0ccb7c465b988ee1a5046a0c4e] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 644] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:30:10] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : b06004c41eb9473783e7cccdc37887ad] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:30:10] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : c8aac2303ed241a09ea2410ae604a2e2] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:30:10] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:30:10] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:30:10] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:30:10] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:30:10] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:30:10] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:30:10] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ ERROR] [2019-01-23 11:30:11] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$b8276f85 -[sid : c8aac2303ed241a09ea2410ae604a2e2] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 665]
com.netflix.hystrix.exception.HystrixRuntimeException: UserApiService#queryUserById(QueryShopById) failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:819)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:804)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$2.onError(AbstractCommand.java:1194)
	at rx.internal.operators.OperatorSubscribeOn$1$1.onError(OperatorSubscribeOn.java:59)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: feign.RetryableException: connect timed out executing POST http://demo-user-service/user//queryUserById
	at feign.FeignException.errorExecuting(FeignException.java:67)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:104)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 26 common frames omitted
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1169)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1105)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:999)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:933)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1283)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1258)
	at feign.Client$Default.convertAndSend(Client.java:133)
	at feign.Client$Default.execute(Client.java:73)
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:80)
	at org.springframework.cloud.netflix.feign.ribbon.FeignLoadBalancer.execute(FeignLoadBalancer.java:48)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:109)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10307)
	at rx.Observable.subscribe(Observable.java:10274)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:445)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:342)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:117)
	at org.springframework.cloud.netflix.feign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	... 31 common frames omitted
[ INFO ] [2019-01-23 11:30:11] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : b06004c41eb9473783e7cccdc37887ad] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 668] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:31:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:36:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:41:01] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:45:15] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 11:45:15 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 11:45:16] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 11:45:16] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 11:45:16] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6ebc3d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:45:17] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 11:45:17] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 11:45:18] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 11:45:18] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 11:45:18] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 11:45:18] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 11:45:19] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548215119667 with initial instances count: 4
[ INFO ] [2019-01-23 11:45:20] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 11:45:23] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 11:45:23] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 11:45:23] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 11:45:23] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18dcb8a7: startup date [Wed Jan 23 11:45:23 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 11:45:25] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=766a47fc-f4bf-36cb-98d2-1279e6761622
[ INFO ] [2019-01-23 11:45:25] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 11:45:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:45:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cad1c0d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:45:26] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fcfe6716] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:45:26] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6ebc3d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:45:28] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 11:45:28] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 11:45:28] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 11:45:28] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 11:45:28] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 5204 ms
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 11:45:29] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@729a9c3d: startup date [Wed Jan 23 11:45:29 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18dcb8a7
[ INFO ] [2019-01-23 11:45:29] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ WARN ] [2019-01-23 11:45:31] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopControllerImpl': Unsatisfied dependency expressed through field 'ShopService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopServiceImpl': Unsatisfied dependency expressed through field 'userApiService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.demo.user.api.client.UserApiService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
[ INFO ] [2019-01-23 11:45:31] org.springframework.context.annotation.AnnotationConfigApplicationContext -Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@729a9c3d: startup date [Wed Jan 23 11:45:29 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18dcb8a7
[ WARN ] [2019-01-23 11:45:31] org.springframework.context.annotation.AnnotationConfigApplicationContext -Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'sqlSessionFactory': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:235)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:192)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:22)
[ INFO ] [2019-01-23 11:45:31] org.apache.catalina.core.StandardService -Stopping service [Tomcat]
[ INFO ] [2019-01-23 11:45:32] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2019-01-23 11:45:32] org.springframework.boot.SpringApplication -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopControllerImpl': Unsatisfied dependency expressed through field 'ShopService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopServiceImpl': Unsatisfied dependency expressed through field 'userApiService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.demo.user.api.client.UserApiService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopServiceImpl': Unsatisfied dependency expressed through field 'userApiService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.demo.user.api.client.UserApiService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.demo.user.api.client.UserApiService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
	at org.springframework.cloud.netflix.feign.HystrixTargeter.getFromContext(HystrixTargeter.java:93)
	at org.springframework.cloud.netflix.feign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:64)
	at org.springframework.cloud.netflix.feign.HystrixTargeter.target(HystrixTargeter.java:53)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:145)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:166)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 42 common frames omitted
[ INFO ] [2019-01-23 11:51:14] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5cbe877d: startup date [Wed Jan 23 11:51:14 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 11:51:14] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 11:51:15] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 11:51:15] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$18484893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:51:15] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 11:51:16] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 11:51:16] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 11:51:16] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 11:51:16] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 11:51:16] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 11:51:16] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 11:51:17] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548215477236 with initial instances count: 4
[ INFO ] [2019-01-23 11:51:17] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 11:51:19] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 11:51:19] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 11:51:19] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 11:51:19] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@60b5e80d: startup date [Wed Jan 23 11:51:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5cbe877d
[ INFO ] [2019-01-23 11:51:23] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=766a47fc-f4bf-36cb-98d2-1279e6761622
[ INFO ] [2019-01-23 11:51:23] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 11:51:23] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:51:23] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc2e4596] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:51:23] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2e5aebd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:51:23] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$18484893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:51:24] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 11:51:24] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 11:51:24] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 11:51:24] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 11:51:24] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 5174 ms
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 11:51:25] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@62f6185a: startup date [Wed Jan 23 11:51:25 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@60b5e80d
[ INFO ] [2019-01-23 11:51:25] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ WARN ] [2019-01-23 11:51:26] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopControllerImpl': Unsatisfied dependency expressed through field 'ShopService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopServiceImpl': Unsatisfied dependency expressed through field 'userApiService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.demo.user.api.client.UserApiService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
[ INFO ] [2019-01-23 11:51:26] org.springframework.context.annotation.AnnotationConfigApplicationContext -Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@62f6185a: startup date [Wed Jan 23 11:51:25 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@60b5e80d
[ WARN ] [2019-01-23 11:51:26] org.springframework.context.annotation.AnnotationConfigApplicationContext -Exception thrown from ApplicationListener handling ContextClosedEvent
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'sqlSessionFactory': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:216)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:235)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:192)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:128)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:393)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:399)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:347)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:991)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:556)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:22)
[ INFO ] [2019-01-23 11:51:26] org.apache.catalina.core.StandardService -Stopping service [Tomcat]
[ INFO ] [2019-01-23 11:51:27] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2019-01-23 11:51:27] org.springframework.boot.SpringApplication -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopControllerImpl': Unsatisfied dependency expressed through field 'ShopService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopServiceImpl': Unsatisfied dependency expressed through field 'userApiService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.demo.user.api.client.UserApiService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopServiceImpl': Unsatisfied dependency expressed through field 'userApiService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.demo.user.api.client.UserApiService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.demo.user.api.client.UserApiService': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:175)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1634)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:254)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1101)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalStateException: No fallbackFactory instance of type class com.demo.user.failback.userCallBackImpl found for feign client demo-user-service
	at org.springframework.cloud.netflix.feign.HystrixTargeter.getFromContext(HystrixTargeter.java:93)
	at org.springframework.cloud.netflix.feign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:64)
	at org.springframework.cloud.netflix.feign.HystrixTargeter.target(HystrixTargeter.java:53)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:145)
	at org.springframework.cloud.netflix.feign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:166)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)
	... 42 common frames omitted
[ INFO ] [2019-01-23 11:52:31] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 11:52:31 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 11:52:32] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 11:52:32] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 11:52:32] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1236479a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:52:32] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 11:52:33] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 11:52:34] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 11:52:34] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 11:52:34] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 11:52:34] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548215554166 with initial instances count: 4
[ INFO ] [2019-01-23 11:52:34] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 11:52:35] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 11:52:35] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 11:52:35] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 11:52:35] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40d848f9: startup date [Wed Jan 23 11:52:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 11:52:37] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=d7442550-2cab-3b1f-98d1-1827aaeed467
[ INFO ] [2019-01-23 11:52:37] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 11:52:37] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:52:37] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f61c449d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:52:37] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$2848eade] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:52:37] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1236479a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 11:52:38] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 11:52:38] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 11:52:38] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 11:52:38] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 11:52:38] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3214 ms
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 11:52:39] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7857cb1d: startup date [Wed Jan 23 11:52:39 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40d848f9
[ INFO ] [2019-01-23 11:52:39] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 11:52:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 11:52:43] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ WARN ] [2019-01-23 11:52:44] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 11:52:44] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 11:52:44] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 11:52:44] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 11:52:44] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40d848f9: startup date [Wed Jan 23 11:52:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 11:52:44] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 11:52:44] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 11:52:44] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 11:52:45] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40d848f9: startup date [Wed Jan 23 11:52:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 11:52:45] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 11:52:46] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 11:52:46] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 11:52:46] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 11:52:46] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 11:52:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 11:52:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 11:52:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 11:52:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=40d848f9,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 11:52:47] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 11:52:47] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 11:52:48] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 11:52:48] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548215568348 with initial instances count: 4
[ INFO ] [2019-01-23 11:52:48] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548215568471, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 11:52:48] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 11:52:48] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 11:52:48] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 11:52:48] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 11:52:48] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 11:52:49] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 11:52:49] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 11:52:49] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 11:52:49] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 11:52:49] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 11:52:49] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 11:52:49] com.demo.shop.ShopApplication -Started ShopApplication in 18.883 seconds (JVM running for 19.807)
[ INFO ] [2019-01-23 11:53:58] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-23 11:53:58] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-23 11:53:58] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
[ INFO ] [2019-01-23 11:53:58] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : debecad1ab3b47099859720e44b364d8] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:53:58] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : a8184b9d1c454bea8cbe31c0bb051f8b] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ WARN ] [2019-01-23 11:53:59] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ DEBUG] [2019-01-23 11:54:01] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:54:01] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:54:01] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:54:01] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:54:01] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:54:01] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:54:01] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:54:01] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5858d25e: startup date [Wed Jan 23 11:54:01 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40d848f9
[ INFO ] [2019-01-23 11:54:01] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 11:54:02] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 11:54:02] com.netflix.util.concurrent.ShutdownEnabledTimer -Shutdown hook installed for: NFLoadBalancer-PingTimer-demo-user-service
[ INFO ] [2019-01-23 11:54:02] com.netflix.loadbalancer.BaseLoadBalancer -Client: demo-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[ INFO ] [2019-01-23 11:54:02] com.netflix.loadbalancer.DynamicServerListLoadBalancer -Using serverListUpdater PollingServerListUpdater
[ INFO ] [2019-01-23 11:54:02] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 11:54:02] com.netflix.loadbalancer.DynamicServerListLoadBalancer -DynamicServerListLoadBalancer for client demo-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[10.10.1.210:6608],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.10.1.210:6608;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@294c68ac
[ INFO ] [2019-01-23 11:54:03] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 11:54:04] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : a8184b9d1c454bea8cbe31c0bb051f8b] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 5814]
[ INFO ] [2019-01-23 11:54:04] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : debecad1ab3b47099859720e44b364d8] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 6053] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:09] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : ae287a77cd8b48708da342f71f55aaf8] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:09] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 3a3242e9e34e4f6ea6a8b9a1c1e431fd] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:54:09] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:54:09] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:54:09] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:54:09] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:54:09] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:54:09] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:54:09] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:54:11] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 3a3242e9e34e4f6ea6a8b9a1c1e431fd] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1655]
[ INFO ] [2019-01-23 11:54:11] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : ae287a77cd8b48708da342f71f55aaf8] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1657] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:15] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f435cb78f8fb457bac05ee5bbf93c193] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:15] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 224e9c0a20b94f38b72b509bd253709b] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:54:15] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:54:15] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:54:15] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:54:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:54:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:54:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:54:15] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:54:16] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 224e9c0a20b94f38b72b509bd253709b] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1661]
[ INFO ] [2019-01-23 11:54:16] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f435cb78f8fb457bac05ee5bbf93c193] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1667] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:34] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 39625a960aa74f2282fe86862731f521] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:34] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 4602e004493945f68cdfaca3c13f7448] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:54:34] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:54:34] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:54:34] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:54:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:54:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:54:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:54:34] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:54:36] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 4602e004493945f68cdfaca3c13f7448] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1673]
[ INFO ] [2019-01-23 11:54:36] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 39625a960aa74f2282fe86862731f521] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1676] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:51] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 46d5f3a23584437ca3253910854955f3] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:51] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : cc5253dc5d0d4f208558ea6030d631e0] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:54:51] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:54:51] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:54:51] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:54:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:54:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:54:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:54:51] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:54:52] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : cc5253dc5d0d4f208558ea6030d631e0] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1677]
[ INFO ] [2019-01-23 11:54:52] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 46d5f3a23584437ca3253910854955f3] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1679] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:58] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 6953edbb6b764e2a901212c3ac168037] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:54:58] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 41426acbad314d949be644722a7bf8ab] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:54:58] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:54:58] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:54:58] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:54:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:54:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:54:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:54:58] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:55:00] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 41426acbad314d949be644722a7bf8ab] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1664]
[ INFO ] [2019-01-23 11:55:00] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 6953edbb6b764e2a901212c3ac168037] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1668] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:55:13] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : b290dbcc8ba54cd89726ab8a5888990e] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:55:13] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 90f4620e67a349e88a841301bb397078] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:55:13] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:55:13] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:55:13] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:55:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:55:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:55:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:55:13] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:55:15] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 90f4620e67a349e88a841301bb397078] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1648]
[ INFO ] [2019-01-23 11:55:15] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : b290dbcc8ba54cd89726ab8a5888990e] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1653] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:55:35] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 213bd0a7686a47b7818c0cc113e4a63a] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:55:35] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : beac6933797446e4bd64979cb7a3a2d3] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:55:40] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:55:40] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:55:40] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:55:40] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:55:40] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:55:40] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:55:40] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:56:12] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : beac6933797446e4bd64979cb7a3a2d3] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 37444]
[ INFO ] [2019-01-23 11:56:12] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 213bd0a7686a47b7818c0cc113e4a63a] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 37453] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:56:37] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 0e006eb081584ad0959fc811c2f87eb7] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:56:37] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 7ff0174ec87f411aaad401232f0fd189] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:56:41] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:56:41] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:56:41] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:56:41] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:56:41] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:56:41] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:56:41] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:56:43] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 7ff0174ec87f411aaad401232f0fd189] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 6085]
[ INFO ] [2019-01-23 11:56:43] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 0e006eb081584ad0959fc811c2f87eb7] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 6091] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:57:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 11:59:51] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e64ac0d48d8e4736966f1bbb3ca3c481] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 11:59:51] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 2ef5bd09f5d64f15bf3a2959b5254fb5] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 11:59:53] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 11:59:53] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 11:59:53] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 11:59:53] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 11:59:53] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 11:59:53] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 11:59:53] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 11:59:55] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 2ef5bd09f5d64f15bf3a2959b5254fb5] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4012]
[ INFO ] [2019-01-23 11:59:55] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e64ac0d48d8e4736966f1bbb3ca3c481] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4017] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 12:00:03] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 5baff3b6aa2a4319bf1e58ecc588b237] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 12:00:03] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : b42c7581d444402d820b2fb3842842de] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 12:00:03] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 12:00:03] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 12:00:03] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 12:00:03] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 12:00:03] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 12:00:03] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 12:00:03] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 12:00:05] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : b42c7581d444402d820b2fb3842842de] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1647]
[ INFO ] [2019-01-23 12:00:05] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 5baff3b6aa2a4319bf1e58ecc588b237] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1665] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 12:00:09] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 1593408569b14948b5f2613aefa6142b] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 12:00:09] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 69365fcacc414060a31212a0292c28d7] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 12:00:09] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 12:00:09] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 12:00:09] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 12:00:09] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 12:00:09] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 12:00:09] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 12:00:09] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 12:00:11] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 69365fcacc414060a31212a0292c28d7] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1643]
[ INFO ] [2019-01-23 12:00:11] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 1593408569b14948b5f2613aefa6142b] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1651] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 12:02:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:07:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:12:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:17:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:22:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:27:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:32:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:37:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:42:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:47:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:52:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 12:57:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:02:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:07:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:12:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:17:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:22:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:27:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:32:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:37:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:42:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:47:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:52:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:57:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 13:59:50] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : a5da15ac9b004786bb6cdd0f86df43ba] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 13:59:50] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 572edc8045754fe89372322dbdb5fb5a] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 13:59:50] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 13:59:50] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 13:59:51] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 13:59:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 13:59:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 13:59:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 13:59:51] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 13:59:52] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 572edc8045754fe89372322dbdb5fb5a] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 2340]
[ INFO ] [2019-01-23 13:59:52] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : a5da15ac9b004786bb6cdd0f86df43ba] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 2445] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:00:01] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 2241890139de4156b9e1cf12b53dd6c6] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:00:01] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 4b7671a9f44749dfbe84ebbfe24de0f7] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:00:01] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:00:01] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:00:01] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:00:01] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:00:01] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:00:01] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:00:01] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:00:02] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 4b7671a9f44749dfbe84ebbfe24de0f7] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1675]
[ INFO ] [2019-01-23 14:00:02] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 2241890139de4156b9e1cf12b53dd6c6] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1678] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:01:55] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 01b5f41cdddc483a9a601276c91110c0] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:01:55] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 1881819645504962a046fae0715e1557] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:01:55] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:01:55] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:01:55] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:01:55] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:01:55] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:01:55] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:01:55] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:01:59] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 1881819645504962a046fae0715e1557] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4517]
[ INFO ] [2019-01-23 14:01:59] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 01b5f41cdddc483a9a601276c91110c0] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4519] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:04] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 54d1ee26032d41a281fda73a38113e3b] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:04] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : ae4df4fe56a84aeaaf30a708634a96cf] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:02:04] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:02:04] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:02:04] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:02:04] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:02:04] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:02:04] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:02:04] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:02:04] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : ae4df4fe56a84aeaaf30a708634a96cf] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 526]
[ INFO ] [2019-01-23 14:02:04] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 54d1ee26032d41a281fda73a38113e3b] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 573] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:07] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : ac738874c20a423dbf304c763f17bd4d] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:07] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 3a9a936040f941879cae36698abd5356] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:02:07] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:02:07] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:02:07] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:02:07] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:02:07] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:02:07] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:02:07] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:02:08] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 3a9a936040f941879cae36698abd5356] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 456]
[ INFO ] [2019-01-23 14:02:08] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : ac738874c20a423dbf304c763f17bd4d] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 457] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:13] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e60f4768bfba4e18bba8d0c212cddb4d] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:13] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : a3865bbb0eb3406fb5fd40bc54d6a704] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:02:13] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:02:13] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:02:13] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:02:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:02:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:02:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:02:13] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:02:14] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : a3865bbb0eb3406fb5fd40bc54d6a704] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 432]
[ INFO ] [2019-01-23 14:02:14] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e60f4768bfba4e18bba8d0c212cddb4d] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 433] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:18] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4b3018d76e064190968eb904c55a011c] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:18] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : b130ac2f7b644a66a9ec5bec2ba55dff] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:02:18] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:02:18] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:02:18] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:02:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:02:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:02:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:02:18] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:02:20] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : b130ac2f7b644a66a9ec5bec2ba55dff] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1694]
[ INFO ] [2019-01-23 14:02:20] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4b3018d76e064190968eb904c55a011c] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1696] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:02:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:07:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:09:15] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : bc085e6d4b4d4b6087ebd39db365d2d0] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:09:15] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 67f272f13d3341058d6803e86759d2b2] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:09:15] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:09:15] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:09:15] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:09:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:09:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:09:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:09:15] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:09:16] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 67f272f13d3341058d6803e86759d2b2] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1659]
[ INFO ] [2019-01-23 14:09:16] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : bc085e6d4b4d4b6087ebd39db365d2d0] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1665] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:09:35] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 07274259e202442c8db6756d028edef1] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:09:35] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : a266893c1814482485930021f99035fc] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:09:35] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:09:35] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:09:35] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:09:35] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:09:35] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:09:35] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:09:35] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:09:36] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : a266893c1814482485930021f99035fc] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1682]
[ INFO ] [2019-01-23 14:09:36] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 07274259e202442c8db6756d028edef1] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1694] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:09:39] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 452cd8ecc32b4a67b17de00cb694a195] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:09:39] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 8dc2aff1072247a399c3f6dc70a9d0c8] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:09:39] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:09:39] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:09:39] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:09:39] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:09:39] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:09:39] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:09:39] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:09:40] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : 8dc2aff1072247a399c3f6dc70a9d0c8] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1754]
[ INFO ] [2019-01-23 14:09:40] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 452cd8ecc32b4a67b17de00cb694a195] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1764] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:09:52] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : fff497124cd74d318a39f9d82340adc7] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:09:52] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : bc7d9987bf0b44c593c2e1219b5fa244] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:09:52] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:09:52] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:09:52] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:09:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:09:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:09:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:09:52] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:09:53] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$5d888afe -[sid : bc7d9987bf0b44c593c2e1219b5fa244] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1661]
[ INFO ] [2019-01-23 14:09:53] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : fff497124cd74d318a39f9d82340adc7] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1665] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:12:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:17:48] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:19:30] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e: startup date [Wed Jan 23 14:19:29 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 14:19:30] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 14:19:30] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:19:30] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4b2a9654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:19:32] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:19:32] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:19:32] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:19:32] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:19:33] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:19:33] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:19:34] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548224374868 with initial instances count: 4
[ INFO ] [2019-01-23 14:19:35] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 14:19:36] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 14:19:36] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 14:19:36] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 14:19:36] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d0290d8: startup date [Wed Jan 23 14:19:36 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e
[ ERROR] [2019-01-23 14:19:39] org.springframework.boot.SpringApplication -Application startup failed
java.lang.NoClassDefFoundError: com/netflix/hystrix/contrib/javanica/aop/aspectj/HystrixCommandAspect
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:613)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:524)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:510)
	at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:570)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:640)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:609)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1484)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:425)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:395)
	at org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration$BeanPostProcessorsRegistrar.registerSyntheticBeanIfMissing(EmbeddedServletContainerAutoConfiguration.java:148)
	at org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration$BeanPostProcessorsRegistrar.registerBeanDefinitions(EmbeddedServletContainerAutoConfiguration.java:137)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:25)
Caused by: java.lang.ClassNotFoundException: com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 31 common frames omitted
[ INFO ] [2019-01-23 14:19:39] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d0290d8: startup date [Wed Jan 23 14:19:36 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e
[ WARN ] [2019-01-23 14:19:39] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d0290d8: startup date [Wed Jan 23 14:19:36 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:427)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:999)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:25)
[ ERROR] [2019-01-23 14:19:39] org.springframework.beans.factory.support.DefaultListableBeanFactory -Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6d0290d8: startup date [Wed Jan 23 14:19:36 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:25)
[ INFO ] [2019-01-23 14:20:09] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 14:20:09 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 14:20:10] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 14:20:10] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:20:10] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8924f257] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:20:11] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:20:11] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:20:11] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:20:11] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:20:11] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:20:11] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:20:12] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548224412712 with initial instances count: 4
[ INFO ] [2019-01-23 14:20:13] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 14:20:13] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 14:20:13] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 14:20:13] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 14:20:13] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7fef0b40: startup date [Wed Jan 23 14:20:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ ERROR] [2019-01-23 14:20:15] org.springframework.boot.SpringApplication -Application startup failed
java.lang.NoClassDefFoundError: com/netflix/hystrix/contrib/javanica/aop/aspectj/HystrixCommandAspect
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethods(Class.java:1975)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:613)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:524)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:510)
	at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:570)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:640)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:609)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1484)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:425)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:395)
	at org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration$BeanPostProcessorsRegistrar.registerSyntheticBeanIfMissing(EmbeddedServletContainerAutoConfiguration.java:148)
	at org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration$BeanPostProcessorsRegistrar.registerBeanDefinitions(EmbeddedServletContainerAutoConfiguration.java:137)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:359)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:143)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:116)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:320)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:228)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:270)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:687)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:525)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:25)
Caused by: java.lang.ClassNotFoundException: com.netflix.hystrix.contrib.javanica.aop.aspectj.HystrixCommandAspect
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 31 common frames omitted
[ INFO ] [2019-01-23 14:20:15] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7fef0b40: startup date [Wed Jan 23 14:20:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ WARN ] [2019-01-23 14:20:15] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7fef0b40: startup date [Wed Jan 23 14:20:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:427)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:999)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:25)
[ ERROR] [2019-01-23 14:20:15] org.springframework.beans.factory.support.DefaultListableBeanFactory -Destroy method on bean with name 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory' threw an exception
java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7fef0b40: startup date [Wed Jan 23 14:20:13 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
	at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:414)
	at org.springframework.context.support.ApplicationListenerDetector.postProcessBeforeDestruction(ApplicationListenerDetector.java:97)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.demo.shop.ShopApplication.main(ShopApplication.java:25)
[ INFO ] [2019-01-23 14:22:18] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 14:22:18 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 14:22:19] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 14:22:19] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:22:19] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e08ddcda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:22:20] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:22:20] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:22:20] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:22:20] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:22:20] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:22:20] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:22:21] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548224541516 with initial instances count: 4
[ INFO ] [2019-01-23 14:22:21] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 14:22:22] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 14:22:22] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 14:22:22] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 14:22:22] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41def031: startup date [Wed Jan 23 14:22:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 14:22:24] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=d7442550-2cab-3b1f-98d1-1827aaeed467
[ INFO ] [2019-01-23 14:22:24] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:22:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:22:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c473d9dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:22:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$f6a0801e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:22:25] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e08ddcda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:22:26] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 14:22:26] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 14:22:26] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 14:22:26] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 14:22:26] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3944 ms
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 14:22:27] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1b800a11: startup date [Wed Jan 23 14:22:27 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41def031
[ INFO ] [2019-01-23 14:22:27] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:22:30] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:22:32] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ WARN ] [2019-01-23 14:22:33] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:22:33] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 14:22:33] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:22:33] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 14:22:33] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41def031: startup date [Wed Jan 23 14:22:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 14:22:33] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:22:33] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:22:33] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:22:34] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41def031: startup date [Wed Jan 23 14:22:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 14:22:34] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 14:22:35] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 14:22:35] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 14:22:35] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 14:22:35] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=41def031,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 14:22:35] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 14:22:35] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:22:36] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 14:22:36] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548224556795 with initial instances count: 4
[ INFO ] [2019-01-23 14:22:36] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548224556891, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 14:22:36] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 14:22:36] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 14:22:37] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 14:22:37] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 14:22:37] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 14:22:37] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 14:22:37] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 14:22:37] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 14:22:37] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 14:22:37] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 14:22:37] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 14:22:37] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:22:37] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:22:37] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 14:22:37] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 14:22:37] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 14:22:37] com.demo.shop.ShopApplication -Started ShopApplication in 19.357 seconds (JVM running for 20.317)
[ INFO ] [2019-01-23 14:22:51] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-23 14:22:51] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-23 14:22:51] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
[ INFO ] [2019-01-23 14:22:51] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 5302c1b906964073a4304631a6f2d43e] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:22:51] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : 693b8c57f52e47cc99dca694a4cbc2e2] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ WARN ] [2019-01-23 14:22:51] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ DEBUG] [2019-01-23 14:22:52] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:22:52] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:22:52] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:22:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:22:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:22:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:22:52] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:22:53] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7244b297: startup date [Wed Jan 23 14:22:53 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41def031
[ INFO ] [2019-01-23 14:22:53] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:22:53] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:22:53] com.netflix.util.concurrent.ShutdownEnabledTimer -Shutdown hook installed for: NFLoadBalancer-PingTimer-demo-user-service
[ INFO ] [2019-01-23 14:22:53] com.netflix.loadbalancer.BaseLoadBalancer -Client: demo-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[ INFO ] [2019-01-23 14:22:53] com.netflix.loadbalancer.DynamicServerListLoadBalancer -Using serverListUpdater PollingServerListUpdater
[ INFO ] [2019-01-23 14:22:53] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:22:53] com.netflix.loadbalancer.DynamicServerListLoadBalancer -DynamicServerListLoadBalancer for client demo-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[10.10.1.210:6608],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.10.1.210:6608;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@50cbf973
[ INFO ] [2019-01-23 14:22:54] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:22:55] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : 693b8c57f52e47cc99dca694a4cbc2e2] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4193]
[ INFO ] [2019-01-23 14:22:55] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 5302c1b906964073a4304631a6f2d43e] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4242] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:22:59] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 8a12c6619d7540c4ad39ff7aebf2e217] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:22:59] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : 19df2cccdc0d4bb9b42e1a19bbb48c70] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:22:59] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:22:59] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:22:59] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:22:59] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:22:59] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:22:59] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:22:59] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:23:00] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : 19df2cccdc0d4bb9b42e1a19bbb48c70] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1644]
[ INFO ] [2019-01-23 14:23:01] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 8a12c6619d7540c4ad39ff7aebf2e217] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 2090] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:26:14] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f6a3a674604044abb6c8fe5aca7f32e8] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:26:14] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : aa05d0d2e9234ae9ae94b00b506fd663] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:26:14] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:26:14] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:26:14] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:26:14] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:26:14] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:26:14] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:26:14] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:26:15] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : aa05d0d2e9234ae9ae94b00b506fd663] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1655]
[ INFO ] [2019-01-23 14:26:15] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f6a3a674604044abb6c8fe5aca7f32e8] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1666] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:26:18] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 84fd564fd5414d999bb35bde2e62771c] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:26:18] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : 7a1453db1eb54719a71b1f082171fed0] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:26:18] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:26:18] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:26:18] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:26:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:26:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:26:18] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:26:18] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:26:19] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : 7a1453db1eb54719a71b1f082171fed0] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1639]
[ INFO ] [2019-01-23 14:26:19] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 84fd564fd5414d999bb35bde2e62771c] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1648] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:26:22] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : d46fa82ddd1745e49a627ed084bd6943] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:26:22] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : f26eb43dd27045019c9863318a889ded] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:26:22] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:26:22] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:26:22] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:26:22] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:26:22] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:26:22] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:26:22] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:26:23] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$2be0203e -[sid : f26eb43dd27045019c9863318a889ded] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1640]
[ INFO ] [2019-01-23 14:26:23] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : d46fa82ddd1745e49a627ed084bd6943] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1642] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:26:57] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 14:26:57 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 14:26:58] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 14:26:58] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:26:58] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5915ca55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:26:59] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:26:59] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:26:59] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:26:59] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:27:00] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548224820877 with initial instances count: 4
[ INFO ] [2019-01-23 14:27:01] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 14:27:01] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 14:27:01] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 14:27:01] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 14:27:02] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40df6090: startup date [Wed Jan 23 14:27:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 14:27:04] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=d7442550-2cab-3b1f-98d1-1827aaeed467
[ INFO ] [2019-01-23 14:27:04] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:27:04] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:27:04] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3cfbc758] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:27:05] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6f286d99] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:27:05] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5915ca55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:27:05] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 14:27:05] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 14:27:05] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 14:27:06] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 14:27:06] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3980 ms
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 14:27:06] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31c56721: startup date [Wed Jan 23 14:27:06 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40df6090
[ INFO ] [2019-01-23 14:27:06] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:27:09] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 14:27:10] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ WARN ] [2019-01-23 14:27:11] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:27:11] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 14:27:11] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:27:11] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 14:27:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40df6090: startup date [Wed Jan 23 14:27:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 14:27:12] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:27:12] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:27:12] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:27:13] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40df6090: startup date [Wed Jan 23 14:27:02 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 14:27:13] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 14:27:13] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 14:27:13] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 14:27:13] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 14:27:13] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=40df6090,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 14:27:14] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 14:27:14] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:27:15] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 14:27:15] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548224835654 with initial instances count: 4
[ INFO ] [2019-01-23 14:27:15] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548224835683, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 14:27:15] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 14:27:15] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 14:27:15] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 14:27:15] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 14:27:15] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 14:27:16] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:27:16] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:27:16] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 14:27:16] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 14:27:16] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 14:27:16] com.demo.shop.ShopApplication -Started ShopApplication in 19.139 seconds (JVM running for 20.365)
[ INFO ] [2019-01-23 14:28:12] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-23 14:28:12] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-23 14:28:12] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
[ INFO ] [2019-01-23 14:28:12] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 2c81aa1c41ff41fc985cfc47a3c79722] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:28:12] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 35bab836754449af839e5b0952c5e593] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ WARN ] [2019-01-23 14:28:12] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ DEBUG] [2019-01-23 14:28:13] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:28:13] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:28:13] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:28:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:28:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:28:13] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:28:13] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:28:13] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2c54640d: startup date [Wed Jan 23 14:28:13 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40df6090
[ INFO ] [2019-01-23 14:28:13] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:28:14] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:28:14] com.netflix.util.concurrent.ShutdownEnabledTimer -Shutdown hook installed for: NFLoadBalancer-PingTimer-demo-user-service
[ INFO ] [2019-01-23 14:28:14] com.netflix.loadbalancer.BaseLoadBalancer -Client: demo-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[ INFO ] [2019-01-23 14:28:14] com.netflix.loadbalancer.DynamicServerListLoadBalancer -Using serverListUpdater PollingServerListUpdater
[ INFO ] [2019-01-23 14:28:14] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:28:14] com.netflix.loadbalancer.DynamicServerListLoadBalancer -DynamicServerListLoadBalancer for client demo-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[10.10.1.210:6608],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.10.1.210:6608;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1535642c
[ INFO ] [2019-01-23 14:28:15] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:28:16] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 35bab836754449af839e5b0952c5e593] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4473]
[ INFO ] [2019-01-23 14:28:16] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 2c81aa1c41ff41fc985cfc47a3c79722] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4516] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:28:28] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 8a00a94a5e9c4c1eb075c2ca70c7d87c] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:28:28] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 45b6bb5f084a4f68bd9e7e0df11127ef] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:28:28] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:28:28] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:28:28] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:28:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:28:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:28:28] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:28:28] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:28:29] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 45b6bb5f084a4f68bd9e7e0df11127ef] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1641]
[ INFO ] [2019-01-23 14:28:29] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 8a00a94a5e9c4c1eb075c2ca70c7d87c] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1653] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:28:34] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 9838f1c54f2d4239b645b9a36de9dd09] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:28:34] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 712b2f5c1457416db1b0d91fe197f4da] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:28:34] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:28:34] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:28:34] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:28:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:28:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:28:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:28:34] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:28:35] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 712b2f5c1457416db1b0d91fe197f4da] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1641]
[ INFO ] [2019-01-23 14:28:35] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 9838f1c54f2d4239b645b9a36de9dd09] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1646] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:30:52] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : fe8040324159483187ddcf6fc3e5bba8] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:30:52] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 2fa3ec00923b47bbad058c0f68177b8c] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:30:52] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:30:52] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:30:52] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:30:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:30:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:30:52] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:30:52] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:30:53] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 2fa3ec00923b47bbad058c0f68177b8c] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1644]
[ INFO ] [2019-01-23 14:30:53] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : fe8040324159483187ddcf6fc3e5bba8] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1649] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:30:55] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 2eefee170aaa4bcdab9e4063bcca3e36] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:30:55] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 01f5c96170854e4b8e86a002f711b48e] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:30:56] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:30:56] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:30:56] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:30:56] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:30:56] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:30:56] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:30:56] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:30:57] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 01f5c96170854e4b8e86a002f711b48e] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1640]
[ INFO ] [2019-01-23 14:30:57] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 2eefee170aaa4bcdab9e4063bcca3e36] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1649] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:32:15] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:37:15] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:38:16] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4fe22d83680a41058d77dbed35aeecea] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:38:16] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 0442408f3bec418c9d9f2ab1622b9e51] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:38:17] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:38:17] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:38:17] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:38:17] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:38:17] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:38:17] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:38:17] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:38:18] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 0442408f3bec418c9d9f2ab1622b9e51] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1650]
[ INFO ] [2019-01-23 14:38:18] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 4fe22d83680a41058d77dbed35aeecea] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1660] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:38:20] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f15aee3b3eba48ce97f79580d4702b8e] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:38:20] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 515441b221814c3baeb1c5e0378f579f] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:38:20] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:38:20] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:38:21] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:38:21] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:38:21] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:38:21] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:38:21] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:38:22] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 515441b221814c3baeb1c5e0378f579f] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1644]
[ INFO ] [2019-01-23 14:38:22] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f15aee3b3eba48ce97f79580d4702b8e] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1654] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:39:38] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : d3626e77818b4caf9399ce0ce58f43f2] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:39:38] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 0e89deef3420476eb25c7ed8c5a0af87] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:39:38] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:39:38] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:39:38] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:39:38] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:39:38] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:39:38] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:39:38] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:39:40] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$a4680db9 -[sid : 0e89deef3420476eb25c7ed8c5a0af87] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1643]
[ INFO ] [2019-01-23 14:39:40] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : d3626e77818b4caf9399ce0ce58f43f2] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1653] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:42:15] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:43:00] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 14:43:00 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 14:43:01] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 14:43:01] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:43:01] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d6cb8a61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:43:02] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:43:02] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:43:02] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:43:02] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:43:02] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:43:02] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:43:03] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548225783729 with initial instances count: 4
[ INFO ] [2019-01-23 14:43:04] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 14:43:04] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 14:43:04] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 14:43:04] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 14:43:05] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@191c6e13: startup date [Wed Jan 23 14:43:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 14:43:07] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=d7442550-2cab-3b1f-98d1-1827aaeed467
[ INFO ] [2019-01-23 14:43:07] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:43:07] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:43:07] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bab18764] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:43:07] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$ecde2da5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:43:07] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d6cb8a61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:43:08] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 14:43:08] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 14:43:08] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 14:43:08] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 14:43:08] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3734 ms
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 14:43:09] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1405aa6a: startup date [Wed Jan 23 14:43:09 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@191c6e13
[ INFO ] [2019-01-23 14:43:09] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 14:43:11] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 14:43:12] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:43:12] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:43:13] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ WARN ] [2019-01-23 14:43:13] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:43:13] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 14:43:14] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:43:14] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 14:43:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@191c6e13: startup date [Wed Jan 23 14:43:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 14:43:14] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:43:14] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:43:14] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:43:15] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@191c6e13: startup date [Wed Jan 23 14:43:05 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 14:43:15] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 14:43:16] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 14:43:16] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 14:43:16] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 14:43:16] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 14:43:16] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=191c6e13,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 14:43:17] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 14:43:17] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:43:17] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 14:43:17] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:43:17] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:43:17] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:43:17] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:43:17] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:43:17] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548225798039 with initial instances count: 4
[ INFO ] [2019-01-23 14:43:18] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548225798089, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 14:43:18] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 14:43:18] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 14:43:18] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 14:43:18] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 14:43:18] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 14:43:18] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:43:18] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:43:18] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 14:43:18] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 14:43:18] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 14:43:18] com.demo.shop.ShopApplication -Started ShopApplication in 18.465 seconds (JVM running for 19.325)
[ INFO ] [2019-01-23 14:44:44] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-23 14:44:44] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-23 14:44:44] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
[ INFO ] [2019-01-23 14:44:44] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : df8b331cb5f14c9987f6eac178bf9bc2] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:44:44] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : df79fe63e0994f17b27750b727c43699] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ WARN ] [2019-01-23 14:44:45] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ DEBUG] [2019-01-23 14:44:47] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:44:47] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:44:47] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:44:47] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:44:47] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:44:47] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:44:47] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:44:47] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@7a44bdc3: startup date [Wed Jan 23 14:44:47 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@191c6e13
[ INFO ] [2019-01-23 14:44:47] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:44:47] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:44:47] com.netflix.util.concurrent.ShutdownEnabledTimer -Shutdown hook installed for: NFLoadBalancer-PingTimer-demo-user-service
[ INFO ] [2019-01-23 14:44:47] com.netflix.loadbalancer.BaseLoadBalancer -Client: demo-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[ INFO ] [2019-01-23 14:44:47] com.netflix.loadbalancer.DynamicServerListLoadBalancer -Using serverListUpdater PollingServerListUpdater
[ INFO ] [2019-01-23 14:44:47] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:44:47] com.netflix.loadbalancer.DynamicServerListLoadBalancer -DynamicServerListLoadBalancer for client demo-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[10.10.1.210:6608],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.10.1.210:6608;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4bb8e219
[ INFO ] [2019-01-23 14:44:48] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:44:49] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : df79fe63e0994f17b27750b727c43699] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4926]
[ INFO ] [2019-01-23 14:44:49] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : df8b331cb5f14c9987f6eac178bf9bc2] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4939] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:44:51] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 9883b45242a9404394a4b7d4a5c761cd] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:44:51] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : e64e54832b1141b5bdb944ebe2024415] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:44:51] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:44:51] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:44:51] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:44:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:44:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:44:51] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:44:51] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:44:53] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : e64e54832b1141b5bdb944ebe2024415] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1650]
[ INFO ] [2019-01-23 14:44:53] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 9883b45242a9404394a4b7d4a5c761cd] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1656] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:44:55] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 24c6749fcb65414ab606cb52c66b5c00] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:44:55] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : ff6ca3af4eab4fab9f87aa466559652a] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:44:55] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:44:55] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:44:55] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:44:55] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:44:55] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:44:55] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:44:55] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:44:57] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : ff6ca3af4eab4fab9f87aa466559652a] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1643]
[ INFO ] [2019-01-23 14:44:57] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 24c6749fcb65414ab606cb52c66b5c00] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1647] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:45:34] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 12fffb8a6f3c4b238110d58ae86335eb] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:45:34] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : 75d53af62e93434c8403df9d8caead38] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:45:34] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:45:34] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:45:34] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:45:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:45:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:45:34] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:45:34] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:45:36] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : 75d53af62e93434c8403df9d8caead38] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1670]
[ INFO ] [2019-01-23 14:45:36] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 12fffb8a6f3c4b238110d58ae86335eb] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1677] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:45:38] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 1201218a9cf046cdac0a968df45fe221] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:45:38] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : e5a1765d23bd436d95dd23d8b29bb3f1] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:45:38] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:45:38] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:45:38] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:45:38] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:45:38] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:45:38] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:45:38] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:45:40] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : e5a1765d23bd436d95dd23d8b29bb3f1] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1647]
[ INFO ] [2019-01-23 14:45:40] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 1201218a9cf046cdac0a968df45fe221] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1652] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:45:44] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 68b2f3f77261466298549306f02f867d] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:45:44] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : 61571b2fc4b64fa79d2f04c5edb4bcc0] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:45:44] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:45:44] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:45:44] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:45:44] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:45:44] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:45:44] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:45:44] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:45:45] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$221dcdc5 -[sid : 61571b2fc4b64fa79d2f04c5edb4bcc0] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1666]
[ INFO ] [2019-01-23 14:45:45] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 68b2f3f77261466298549306f02f867d] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1681] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:48:18] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:51:08] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4: startup date [Wed Jan 23 14:51:08 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 14:51:09] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 14:51:09] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:51:09] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d99077dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:51:10] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:51:10] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:51:10] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:51:10] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:51:10] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:51:10] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:51:11] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548226271423 with initial instances count: 4
[ INFO ] [2019-01-23 14:51:11] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 14:51:12] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 14:51:12] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 14:51:12] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 14:51:12] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53a50b0a: startup date [Wed Jan 23 14:51:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 14:51:14] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=d7442550-2cab-3b1f-98d1-1827aaeed467
[ INFO ] [2019-01-23 14:51:14] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:51:14] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:51:15] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd7674df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:51:15] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$efa31b20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:51:15] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d99077dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:51:15] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 14:51:15] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 14:51:15] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 14:51:16] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 14:51:16] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3518 ms
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 14:51:16] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3f6d36eb: startup date [Wed Jan 23 14:51:16 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53a50b0a
[ INFO ] [2019-01-23 14:51:16] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:51:19] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:51:20] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ WARN ] [2019-01-23 14:51:20] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:51:20] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 14:51:20] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:51:20] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 14:51:21] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53a50b0a: startup date [Wed Jan 23 14:51:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4
[ INFO ] [2019-01-23 14:51:21] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:51:21] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:51:21] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:51:22] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53a50b0a: startup date [Wed Jan 23 14:51:12 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4b2a01d4] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 14:51:22] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 14:51:22] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 14:51:22] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 14:51:22] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 14:51:22] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=53a50b0a,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 14:51:23] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 14:51:23] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:51:23] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 14:51:23] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:51:23] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:51:24] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:51:24] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:51:24] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:51:24] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548226284028 with initial instances count: 4
[ INFO ] [2019-01-23 14:51:24] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 14:51:24] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548226284103, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 14:51:24] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 14:51:24] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 14:51:24] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 14:51:24] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 14:51:24] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 14:51:24] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 14:51:24] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:51:24] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:51:24] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 14:51:24] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 14:51:24] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 14:51:24] com.demo.shop.ShopApplication -Started ShopApplication in 16.408 seconds (JVM running for 17.255)
[ INFO ] [2019-01-23 14:52:18] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-23 14:52:18] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-23 14:52:18] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
[ INFO ] [2019-01-23 14:52:18] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f7704f45d490475793b3edb0e5f9d8dc] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:52:18] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 460d94f6c61d4c3db220082863687a0f] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ WARN ] [2019-01-23 14:52:18] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ DEBUG] [2019-01-23 14:52:20] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:52:20] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:52:20] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:52:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:52:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:52:20] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:52:20] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:52:20] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1c7d261: startup date [Wed Jan 23 14:52:20 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53a50b0a
[ INFO ] [2019-01-23 14:52:20] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:52:20] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:52:20] com.netflix.util.concurrent.ShutdownEnabledTimer -Shutdown hook installed for: NFLoadBalancer-PingTimer-demo-user-service
[ INFO ] [2019-01-23 14:52:20] com.netflix.loadbalancer.BaseLoadBalancer -Client: demo-user-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[ INFO ] [2019-01-23 14:52:20] com.netflix.loadbalancer.DynamicServerListLoadBalancer -Using serverListUpdater PollingServerListUpdater
[ INFO ] [2019-01-23 14:52:20] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:52:20] com.netflix.loadbalancer.DynamicServerListLoadBalancer -DynamicServerListLoadBalancer for client demo-user-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=demo-user-service,current list of Servers=[10.10.1.210:6608],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.10.1.210:6608;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@18c11755
[ INFO ] [2019-01-23 14:52:21] com.netflix.config.ChainedDynamicProperty -Flipping property: demo-user-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[ INFO ] [2019-01-23 14:52:22] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 460d94f6c61d4c3db220082863687a0f] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4596]
[ INFO ] [2019-01-23 14:52:22] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : f7704f45d490475793b3edb0e5f9d8dc] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4613] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:52:26] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : df55ea415ac741dc99d9e797de2314b0] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:52:26] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 77669701ac57416eb3b52af9b43a8683] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:52:26] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:52:26] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:52:26] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:52:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:52:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:52:26] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:52:26] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:52:27] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 77669701ac57416eb3b52af9b43a8683] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1652]
[ INFO ] [2019-01-23 14:52:27] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : df55ea415ac741dc99d9e797de2314b0] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1666] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:52:29] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 7ba83d47cff044f6914557244845cdd0] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:52:29] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 765ea3261cba4a13bf3176ce87ce063b] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:52:29] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:52:29] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:52:29] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:52:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:52:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:52:29] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:52:29] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:52:31] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 765ea3261cba4a13bf3176ce87ce063b] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1651]
[ INFO ] [2019-01-23 14:52:31] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 7ba83d47cff044f6914557244845cdd0] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1655] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:52:58] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e85774581c41484887f0b58ed0389c3c] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:52:58] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 4f22385e51864fc7843e211f133b7ea4] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:52:58] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:52:58] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:52:58] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:52:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:52:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:52:58] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:52:58] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:53:00] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 4f22385e51864fc7843e211f133b7ea4] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1651]
[ INFO ] [2019-01-23 14:53:00] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e85774581c41484887f0b58ed0389c3c] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1656] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:53:08] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 707047574ba146a98b2a419de84b4c5c] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:53:08] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 56c80e379fa84c17941a7abbc5308fc1] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:53:08] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:53:08] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:53:08] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:53:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:53:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:53:08] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:53:08] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:53:10] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 56c80e379fa84c17941a7abbc5308fc1] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1659]
[ INFO ] [2019-01-23 14:53:10] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 707047574ba146a98b2a419de84b4c5c] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1664] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:53:11] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e5f5a0c996a744c78722f96ba0a2316d] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:53:11] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 617adffc02b84b9ebc3db037fd8ef4c0] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:53:11] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:53:11] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:53:11] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:53:11] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:53:11] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:53:11] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:53:11] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:53:13] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 617adffc02b84b9ebc3db037fd8ef4c0] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1646]
[ INFO ] [2019-01-23 14:53:13] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : e5f5a0c996a744c78722f96ba0a2316d] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1649] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:53:15] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 1d6948f1427b4b4f8c712b390d60aeb3] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:53:15] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : ac235d914cec41508862c81b77a1a112] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:53:15] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:53:15] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:53:15] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:53:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:53:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:53:15] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:53:15] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:53:17] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : ac235d914cec41508862c81b77a1a112] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1659]
[ INFO ] [2019-01-23 14:53:17] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 1d6948f1427b4b4f8c712b390d60aeb3] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1663] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:53:19] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : c87772575537442582727cfa11a8810f] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:53:19] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 11bafdb4b67744f2920f0e9742e7a126] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ DEBUG] [2019-01-23 14:53:19] com.demo.shop.dao.ShopDao.queryShop -==>  Preparing: SELECT ID, NAME, TYPE, PRICE, USER_CODE FROM shop WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-23 14:53:19] com.demo.shop.dao.ShopDao.queryShop -==> Parameters: 0(Integer), 1000(Integer)
[ TRACE] [2019-01-23 14:53:19] com.demo.shop.dao.ShopDao.queryShop -<==    Columns: ID, NAME, TYPE, PRICE, USER_CODE
[ TRACE] [2019-01-23 14:53:19] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 1, macBook, 1, 8888, 1
[ TRACE] [2019-01-23 14:53:19] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 2, iphonex, 2, 9999, 2
[ TRACE] [2019-01-23 14:53:19] com.demo.shop.dao.ShopDao.queryShop -<==        Row: 3, fill耳机, 3, 599, 3
[ DEBUG] [2019-01-23 14:53:19] com.demo.shop.dao.ShopDao.queryShop -<==      Total: 3
[ INFO ] [2019-01-23 14:53:21] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$24e2bb40 -[sid : 11bafdb4b67744f2920f0e9742e7a126] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 1669]
[ INFO ] [2019-01-23 14:53:21] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : c87772575537442582727cfa11a8810f] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 1674] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:54:03] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e: startup date [Wed Jan 23 14:54:03 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-23 14:54:03] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-23 14:54:03] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:54:03] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$454c6a54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:54:04] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:54:04] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:54:05] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548226445951 with initial instances count: 4
[ INFO ] [2019-01-23 14:54:06] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-23 14:54:07] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-23 14:54:07] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-23 14:54:07] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-23 14:54:07] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@756b2d90: startup date [Wed Jan 23 14:54:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e
[ INFO ] [2019-01-23 14:54:09] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=d7442550-2cab-3b1f-98d1-1827aaeed467
[ INFO ] [2019-01-23 14:54:09] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:54:09] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:54:09] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29326757] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:54:09] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$5b5f0d98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:54:09] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$454c6a54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-23 14:54:10] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-23 14:54:10] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-23 14:54:10] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-23 14:54:10] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-23 14:54:10] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3528 ms
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-23 14:54:11] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6ae32ff0: startup date [Wed Jan 23 14:54:11 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@756b2d90
[ INFO ] [2019-01-23 14:54:11] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/queryTest],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.shop.api.dto.rsp.ShopDto> com.demo.shop.controller.ShopControllerImpl.queryTest()
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/shop/operError],methods=[GET],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<java.lang.Void> com.demo.shop.controller.ShopControllerImpl.operError()
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-23 14:54:14] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-23 14:54:15] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ WARN ] [2019-01-23 14:54:16] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:54:16] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-23 14:54:16] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-23 14:54:16] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-23 14:54:16] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@756b2d90: startup date [Wed Jan 23 14:54:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e
[ INFO ] [2019-01-23 14:54:16] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:54:16] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:54:16] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-23 14:54:17] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@756b2d90: startup date [Wed Jan 23 14:54:07 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@681a8b4e] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-23 14:54:17] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-23 14:54:18] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-23 14:54:18] com.netflix.discovery.DiscoveryClient -Unregistering ...
[ INFO ] [2019-01-23 14:54:18] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - deregister  status: 200
[ INFO ] [2019-01-23 14:54:18] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=756b2d90,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-23 14:54:18] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-23 14:54:18] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-23 14:54:19] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-23 14:54:19] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1548226460223 with initial instances count: 4
[ INFO ] [2019-01-23 14:54:20] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1548226460251, current=UP, previous=STARTING]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-23 14:54:20] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-23 14:54:20] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-23 14:54:20] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-23 14:54:20] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-23 14:54:20] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-23 14:54:20] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:54:20] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-23 14:54:20] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-23 14:54:20] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-23 14:54:20] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-23 14:54:20] com.demo.shop.ShopApplication -Started ShopApplication in 18.23 seconds (JVM running for 19.144)
[ INFO ] [2019-01-23 14:54:53] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-23 14:54:53] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-23 14:54:53] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
[ INFO ] [2019-01-23 14:54:53] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 6862ce449aaa43509fa707c6724f37ad] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:54:53] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$909eadb8 -[sid : d79ac67db9454bd08e8f57e5654bb51a] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ WARN ] [2019-01-23 14:54:53] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ ERROR] [2019-01-23 14:54:57] org.apache.tomcat.jdbc.pool.ConnectionPool -Unable to create initial connections of pool.
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2097)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2022)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:281)
	at com.github.pagehelper.PageHelper.getSqlUtil(PageHelper.java:305)
	at com.github.pagehelper.PageHelper.initSqlUtil(PageHelper.java:263)
	at com.github.pagehelper.PageHelper.intercept(PageHelper.java:250)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy150.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy139.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy140.queryShop(Unknown Source)
	at com.demo.shop.service.impl.ShopServiceImpl.queryShop(ShopServiceImpl.java:33)
	at com.demo.shop.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$37c70304.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ServiceInterceptorConfig.doAround(ServiceInterceptorConfig.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$8bbdaa69.queryShop(<generated>)
	at com.demo.shop.controller.ShopControllerImpl.queryShop(ShopControllerImpl.java:37)
	at com.demo.shop.controller.ShopControllerImpl$$FastClassBySpringCGLIB$$6a465faa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ControllerInterceptorConfig.doAround(ControllerInterceptorConfig.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.controller.ShopControllerImpl$$EnhancerBySpringCGLIB$$c68fd81b.queryShop(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2038)
	... 145 common frames omitted
Caused by: java.net.UnknownHostException: *****
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 147 common frames omitted
[ ERROR] [2019-01-23 14:54:57] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$909eadb8 -[sid : d79ac67db9454bd08e8f57e5654bb51a] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4325]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
### Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy139.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy140.queryShop(Unknown Source)
	at com.demo.shop.service.impl.ShopServiceImpl.queryShop(ShopServiceImpl.java:33)
	at com.demo.shop.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$37c70304.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ServiceInterceptorConfig.doAround(ServiceInterceptorConfig.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$8bbdaa69.queryShop(<generated>)
	at com.demo.shop.controller.ShopControllerImpl.queryShop(ShopControllerImpl.java:37)
	at com.demo.shop.controller.ShopControllerImpl$$FastClassBySpringCGLIB$$6a465faa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ControllerInterceptorConfig.doAround(ControllerInterceptorConfig.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.controller.ShopControllerImpl$$EnhancerBySpringCGLIB$$c68fd81b.queryShop(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
### Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 113 common frames omitted
Caused by: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:284)
	at com.github.pagehelper.PageHelper.getSqlUtil(PageHelper.java:305)
	at com.github.pagehelper.PageHelper.initSqlUtil(PageHelper.java:263)
	at com.github.pagehelper.PageHelper.intercept(PageHelper.java:250)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy150.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	... 119 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2097)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2022)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:281)
	... 125 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2038)
	... 145 common frames omitted
Caused by: java.net.UnknownHostException: *****
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 147 common frames omitted
[ INFO ] [2019-01-23 14:54:57] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 6862ce449aaa43509fa707c6724f37ad] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4340] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:55:10] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 6af1aab30cfb4a2e907bbbc0b46dcf42] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:55:10] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$909eadb8 -[sid : 140dc8307aa04e6abab999cd0ec27a9f] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ ERROR] [2019-01-23 14:55:14] org.apache.tomcat.jdbc.pool.ConnectionPool -Unable to create initial connections of pool.
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2097)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2022)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:281)
	at com.github.pagehelper.PageHelper.getSqlUtil(PageHelper.java:305)
	at com.github.pagehelper.PageHelper.initSqlUtil(PageHelper.java:263)
	at com.github.pagehelper.PageHelper.intercept(PageHelper.java:250)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy150.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy139.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy140.queryShop(Unknown Source)
	at com.demo.shop.service.impl.ShopServiceImpl.queryShop(ShopServiceImpl.java:33)
	at com.demo.shop.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$37c70304.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ServiceInterceptorConfig.doAround(ServiceInterceptorConfig.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$8bbdaa69.queryShop(<generated>)
	at com.demo.shop.controller.ShopControllerImpl.queryShop(ShopControllerImpl.java:37)
	at com.demo.shop.controller.ShopControllerImpl$$FastClassBySpringCGLIB$$6a465faa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ControllerInterceptorConfig.doAround(ControllerInterceptorConfig.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.controller.ShopControllerImpl$$EnhancerBySpringCGLIB$$c68fd81b.queryShop(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2038)
	... 145 common frames omitted
Caused by: java.net.UnknownHostException: *****
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 147 common frames omitted
[ ERROR] [2019-01-23 14:55:14] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$909eadb8 -[sid : 140dc8307aa04e6abab999cd0ec27a9f] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4015]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
### Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy139.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy140.queryShop(Unknown Source)
	at com.demo.shop.service.impl.ShopServiceImpl.queryShop(ShopServiceImpl.java:33)
	at com.demo.shop.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$37c70304.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ServiceInterceptorConfig.doAround(ServiceInterceptorConfig.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$8bbdaa69.queryShop(<generated>)
	at com.demo.shop.controller.ShopControllerImpl.queryShop(ShopControllerImpl.java:37)
	at com.demo.shop.controller.ShopControllerImpl$$FastClassBySpringCGLIB$$6a465faa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ControllerInterceptorConfig.doAround(ControllerInterceptorConfig.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.controller.ShopControllerImpl$$EnhancerBySpringCGLIB$$c68fd81b.queryShop(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
### Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 113 common frames omitted
Caused by: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:284)
	at com.github.pagehelper.PageHelper.getSqlUtil(PageHelper.java:305)
	at com.github.pagehelper.PageHelper.initSqlUtil(PageHelper.java:263)
	at com.github.pagehelper.PageHelper.intercept(PageHelper.java:250)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy150.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	... 119 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2097)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2022)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:281)
	... 125 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2038)
	... 145 common frames omitted
Caused by: java.net.UnknownHostException: *****
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 147 common frames omitted
[ INFO ] [2019-01-23 14:55:14] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 6af1aab30cfb4a2e907bbbc0b46dcf42] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4024] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:56:06] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 460b90e52c5e453b9217f6d03a5d1323] begin call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:56:06] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$909eadb8 -[sid : e4979b81dfa24ece9cea3fe4c801976c] begin call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [args : [{"excludeQueryCount":false,"pageIndex":1,"pageSize":1000}]]
[ ERROR] [2019-01-23 14:56:10] org.apache.tomcat.jdbc.pool.ConnectionPool -Unable to create initial connections of pool.
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2097)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2022)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:281)
	at com.github.pagehelper.PageHelper.getSqlUtil(PageHelper.java:305)
	at com.github.pagehelper.PageHelper.initSqlUtil(PageHelper.java:263)
	at com.github.pagehelper.PageHelper.intercept(PageHelper.java:250)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy150.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy139.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy140.queryShop(Unknown Source)
	at com.demo.shop.service.impl.ShopServiceImpl.queryShop(ShopServiceImpl.java:33)
	at com.demo.shop.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$37c70304.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ServiceInterceptorConfig.doAround(ServiceInterceptorConfig.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$8bbdaa69.queryShop(<generated>)
	at com.demo.shop.controller.ShopControllerImpl.queryShop(ShopControllerImpl.java:37)
	at com.demo.shop.controller.ShopControllerImpl$$FastClassBySpringCGLIB$$6a465faa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ControllerInterceptorConfig.doAround(ControllerInterceptorConfig.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.controller.ShopControllerImpl$$EnhancerBySpringCGLIB$$c68fd81b.queryShop(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2038)
	... 145 common frames omitted
Caused by: java.net.UnknownHostException: *****
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 147 common frames omitted
[ ERROR] [2019-01-23 14:56:10] com.demo.framework.aspectj.ServiceInterceptorConfig$$EnhancerBySpringCGLIB$$909eadb8 -[sid : e4979b81dfa24ece9cea3fe4c801976c] end call service [method : com.demo.shop.service.impl.ShopServiceImpl.queryShop] [callTime : 4040]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
### Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy139.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy140.queryShop(Unknown Source)
	at com.demo.shop.service.impl.ShopServiceImpl.queryShop(ShopServiceImpl.java:33)
	at com.demo.shop.service.impl.ShopServiceImpl$$FastClassBySpringCGLIB$$37c70304.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ServiceInterceptorConfig.doAround(ServiceInterceptorConfig.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.service.impl.ShopServiceImpl$$EnhancerBySpringCGLIB$$8bbdaa69.queryShop(<generated>)
	at com.demo.shop.controller.ShopControllerImpl.queryShop(ShopControllerImpl.java:37)
	at com.demo.shop.controller.ShopControllerImpl$$FastClassBySpringCGLIB$$6a465faa.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.demo.framework.aspectj.ControllerInterceptorConfig.doAround(ControllerInterceptorConfig.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.demo.shop.controller.ShopControllerImpl$$EnhancerBySpringCGLIB$$c68fd81b.queryShop(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
### Cause: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 113 common frames omitted
Caused by: java.lang.RuntimeException: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:284)
	at com.github.pagehelper.PageHelper.getSqlUtil(PageHelper.java:305)
	at com.github.pagehelper.PageHelper.initSqlUtil(PageHelper.java:263)
	at com.github.pagehelper.PageHelper.intercept(PageHelper.java:250)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy150.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	... 119 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2097)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2022)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:203)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:735)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:667)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:482)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.getConnection(DataSourceProxy.java:131)
	at com.github.pagehelper.PageHelper.getUrl(PageHelper.java:281)
	... 125 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:989)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:341)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:2038)
	... 145 common frames omitted
Caused by: java.net.UnknownHostException: *****
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:300)
	... 147 common frames omitted
[ INFO ] [2019-01-23 14:56:10] com.demo.framework.aspectj.ControllerInterceptorConfig -[sid : 460b90e52c5e453b9217f6d03a5d1323] end call controller [method : com.demo.shop.controller.ShopControllerImpl.queryShop] [callTime : 4044] [ip : 10.10.1.210] [url : http://10.10.1.210:6612/shop/queryShop] [uri : /shop/queryShop]
[ INFO ] [2019-01-23 14:59:20] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 15:04:20] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 15:09:20] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 15:14:20] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-23 15:19:20] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
