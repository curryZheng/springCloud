[ INFO ] [2019-01-17 10:44:31] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64: startup date [Thu Jan 17 10:44:31 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-17 10:44:31] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-17 10:44:31] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 10:44:31] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$79bde971] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 10:44:32] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 10:44:32] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 10:44:32] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 10:44:32] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Not registering with Eureka server per configuration
[ INFO ] [2019-01-17 10:44:33] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547693073776 with initial instances count: 1
[ INFO ] [2019-01-17 10:44:34] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-17 10:44:35] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-user-service, global-swagger,global-db, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2019-01-17 10:44:35] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/global-swagger.yml'}]]
[ INFO ] [2019-01-17 10:44:35] com.demo.user.UserApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-17 10:44:35] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e1a986c: startup date [Thu Jan 17 10:44:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 10:44:37] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=1d6abac0-ede3-3cdf-aa51-5e4b4b47324b
[ INFO ] [2019-01-17 10:44:37] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 10:44:38] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5da3e674] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 10:44:38] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$8fd08cb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 10:44:38] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$79bde971] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 10:44:38] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6608 (http)
[ INFO ] [2019-01-17 10:44:38] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-17 10:44:38] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-17 10:44:39] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-17 10:44:39] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3729 ms
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-17 10:44:39] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-17 10:44:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.controller.UserControllerImpl.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-17 10:44:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 10:44:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-17 10:44:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-17 10:44:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-17 10:44:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 10:44:42] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-17 10:44:43] org.springframework.cloud.commons.util.InetUtils -Cannot determine local hostname
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:44:44] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ WARN ] [2019-01-17 10:44:44] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 10:44:44] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-17 10:44:44] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 10:44:44] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-17 10:44:45] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e1a986c: startup date [Thu Jan 17 10:44:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 10:44:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 10:44:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 10:44:45] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 10:44:46] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e1a986c: startup date [Thu Jan 17 10:44:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-17 10:44:46] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-17 10:44:46] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-17 10:44:46] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5e1a986c,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-17 10:44:46] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-17 10:44:46] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 10:44:47] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-17 10:44:47] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547693087894 with initial instances count: 1
[ INFO ] [2019-01-17 10:44:47] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-user-service with eureka with status UP
[ INFO ] [2019-01-17 10:44:47] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1547693087993, current=UP, previous=STARTING]
[ INFO ] [2019-01-17 10:44:48] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-USER-SERVICE/10.10.1.210:6608: registering service...
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-17 10:44:48] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-USER-SERVICE/10.10.1.210:6608 - registration status: 204
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-17 10:44:48] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-17 10:44:48] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-17 10:44:48] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-17 10:44:48] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-17 10:44:49] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6608"]
[ INFO ] [2019-01-17 10:44:49] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6608"]
[ INFO ] [2019-01-17 10:44:49] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-17 10:44:49] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6608 (http)
[ INFO ] [2019-01-17 10:44:49] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6608
[ INFO ] [2019-01-17 10:44:49] com.demo.user.UserApplication -Started UserApplication in 18.764 seconds (JVM running for 19.691)
[ INFO ] [2019-01-17 10:45:00] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-17 10:45:00] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-17 10:45:00] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 55 ms
[ WARN ] [2019-01-17 10:45:25] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ INFO ] [2019-01-17 10:49:47] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 10:53:56] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64: startup date [Thu Jan 17 10:53:56 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-17 10:53:56] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-17 10:53:56] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 10:53:56] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5a4a9b82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 10:53:57] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 10:53:57] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 10:53:57] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 10:53:57] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Not registering with Eureka server per configuration
[ INFO ] [2019-01-17 10:53:58] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547693638936 with initial instances count: 2
[ INFO ] [2019-01-17 10:53:59] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-17 10:53:59] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-user-service, global-swagger,global-db, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2019-01-17 10:53:59] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/global-swagger.yml'}]]
[ INFO ] [2019-01-17 10:53:59] com.demo.user.UserApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-17 10:53:59] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528c8c1: startup date [Thu Jan 17 10:53:59 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 10:54:02] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=1d6abac0-ede3-3cdf-aa51-5e4b4b47324b
[ INFO ] [2019-01-17 10:54:02] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 10:54:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3e309885] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 10:54:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$705d3ec6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 10:54:02] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5a4a9b82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 10:54:02] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6608 (http)
[ INFO ] [2019-01-17 10:54:02] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-17 10:54:02] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-17 10:54:03] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-17 10:54:03] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3326 ms
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-17 10:54:03] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-17 10:54:05] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.controller.UserControllerImpl.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-17 10:54:05] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 10:54:05] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-17 10:54:05] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-17 10:54:05] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-17 10:54:05] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 10:54:05] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 10:54:06] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ WARN ] [2019-01-17 10:54:06] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 10:54:06] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-17 10:54:06] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 10:54:06] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-17 10:54:07] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528c8c1: startup date [Thu Jan 17 10:53:59 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 10:54:07] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 10:54:07] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 10:54:07] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 10:54:08] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@528c8c1: startup date [Thu Jan 17 10:53:59 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-17 10:54:08] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-17 10:54:08] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-17 10:54:08] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-17 10:54:08] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-17 10:54:09] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=528c8c1,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-17 10:54:09] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 10:54:09] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-17 10:54:09] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547693649840 with initial instances count: 2
[ INFO ] [2019-01-17 10:54:09] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-user-service with eureka with status UP
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1547693649878, current=UP, previous=STARTING]
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-USER-SERVICE/10.10.1.210:6608: registering service...
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-17 10:54:09] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-USER-SERVICE/10.10.1.210:6608 - registration status: 204
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-17 10:54:09] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-17 10:54:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-17 10:54:10] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-17 10:54:10] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-17 10:54:10] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-17 10:54:10] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-17 10:54:10] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-17 10:54:10] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6608"]
[ INFO ] [2019-01-17 10:54:10] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6608"]
[ INFO ] [2019-01-17 10:54:10] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-17 10:54:10] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6608 (http)
[ INFO ] [2019-01-17 10:54:10] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6608
[ INFO ] [2019-01-17 10:54:10] com.demo.user.UserApplication -Started UserApplication in 15.405 seconds (JVM running for 16.26)
[ INFO ] [2019-01-17 10:55:16] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-17 10:55:16] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-17 10:55:16] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
[ WARN ] [2019-01-17 10:55:16] org.apache.tomcat.jdbc.pool.ConnectionPool -maxIdle is larger than maxActive, setting maxIdle to: 20
[ DEBUG] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -==>  Preparing: SELECT * FROM user WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -==> Parameters: 0(Integer), 10(Integer)
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==    Columns: id, user_name, user_password, city, age, sex
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 1, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 3, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 4, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 5, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 6, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 7, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 8, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 9, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 10, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==        Row: 11, 郑磊, 123, 湖北, 22, 男
[ DEBUG] [2019-01-17 10:55:18] com.demo.user.dao.UserDao.queryUser -<==      Total: 10
[ DEBUG] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -==>  Preparing: SELECT * FROM user WHERE 1 = 1 limit ?,? 
[ DEBUG] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -==> Parameters: 0(Integer), 10(Integer)
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==    Columns: id, user_name, user_password, city, age, sex
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 1, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 3, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 4, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 5, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 6, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 7, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 8, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 9, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 10, 郑磊, 123, 湖北, 22, 男
[ TRACE] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==        Row: 11, 郑磊, 123, 湖北, 22, 男
[ DEBUG] [2019-01-17 10:57:01] com.demo.user.dao.UserDao.queryUser -<==      Total: 10
[ INFO ] [2019-01-17 10:59:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:04:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:09:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:14:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:19:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:24:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:29:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:34:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:39:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:44:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:49:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:54:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 11:59:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:04:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:09:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:14:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:19:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:24:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:29:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:34:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:39:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:44:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:49:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:54:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 12:59:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:04:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:09:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:14:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:19:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:24:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:29:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:34:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:39:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:44:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:49:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:54:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 13:59:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:04:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:09:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:14:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:19:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:24:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:29:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:30:45] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@bd4dc25: startup date [Thu Jan 17 14:30:45 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-17 14:30:45] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-17 14:30:45] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:30:45] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28630f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:30:46] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 14:30:46] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 14:30:46] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:30:46] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 14:30:47] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 14:30:48] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 14:30:48] com.netflix.discovery.DiscoveryClient -Not registering with Eureka server per configuration
[ INFO ] [2019-01-17 14:30:48] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547706648244 with initial instances count: 2
[ INFO ] [2019-01-17 14:30:48] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-17 14:30:51] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-17 14:30:51] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-17 14:30:51] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-17 14:30:51] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3e7c4815: startup date [Thu Jan 17 14:30:51 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@bd4dc25
[ INFO ] [2019-01-17 14:30:53] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=65ba67d2-264d-3fb5-ab20-fd5109ac922e
[ INFO ] [2019-01-17 14:30:54] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:30:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c490c82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:30:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3e75b2c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:30:54] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28630f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:31:01] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6609 (http)
[ INFO ] [2019-01-17 14:31:01] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-17 14:31:01] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-17 14:31:04] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-17 14:31:04] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 12707 ms
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-17 14:31:04] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ WARN ] [2019-01-17 14:31:04] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopControllerImpl': Unsatisfied dependency expressed through field 'ShopService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopServiceImpl': Unsatisfied dependency expressed through field 'userApiService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.demo.user.api.client.UserApiService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[ INFO ] [2019-01-17 14:31:04] org.apache.catalina.core.StandardService -Stopping service [Tomcat]
[ INFO ] [2019-01-17 14:31:05] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2019-01-17 14:31:05] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field userApiService in com.demo.shop.service.impl.ShopServiceImpl required a bean of type 'com.demo.user.api.client.UserApiService' that could not be found.


Action:

Consider defining a bean of type 'com.demo.user.api.client.UserApiService' in your configuration.

[ INFO ] [2019-01-17 14:31:33] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@bd4dc25: startup date [Thu Jan 17 14:31:33 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-17 14:31:33] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-17 14:31:33] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:31:33] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28630f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:31:34] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 14:31:34] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Not registering with Eureka server per configuration
[ INFO ] [2019-01-17 14:31:35] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547706695812 with initial instances count: 2
[ INFO ] [2019-01-17 14:31:36] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-17 14:31:37] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-17 14:31:37] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-17 14:31:37] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-17 14:31:37] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3e7c4815: startup date [Thu Jan 17 14:31:37 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@bd4dc25
[ INFO ] [2019-01-17 14:31:39] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=65ba67d2-264d-3fb5-ab20-fd5109ac922e
[ INFO ] [2019-01-17 14:31:39] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:31:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c490c82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:31:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3e75b2c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:31:39] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$28630f7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-17 14:31:40] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-17 14:31:40] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-17 14:31:40] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-17 14:31:40] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3014 ms
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-17 14:31:40] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ WARN ] [2019-01-17 14:31:41] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopControllerImpl': Unsatisfied dependency expressed through field 'ShopService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'shopServiceImpl': Unsatisfied dependency expressed through field 'userApiService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.demo.user.api.client.UserApiService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[ INFO ] [2019-01-17 14:31:41] org.apache.catalina.core.StandardService -Stopping service [Tomcat]
[ INFO ] [2019-01-17 14:31:41] org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[ ERROR] [2019-01-17 14:31:41] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field userApiService in com.demo.shop.service.impl.ShopServiceImpl required a bean of type 'com.demo.user.api.client.UserApiService' that could not be found.


Action:

Consider defining a bean of type 'com.demo.user.api.client.UserApiService' in your configuration.

[ INFO ] [2019-01-17 14:34:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:35:20] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64: startup date [Thu Jan 17 14:35:20 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-17 14:35:21] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-17 14:35:21] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:35:21] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e68c6b08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:35:22] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 14:35:22] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 14:35:23] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:35:23] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:35:23] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 14:35:23] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 14:35:23] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Not registering with Eureka server per configuration
[ INFO ] [2019-01-17 14:35:24] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547706924276 with initial instances count: 2
[ INFO ] [2019-01-17 14:35:24] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-17 14:35:27] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-17 14:35:27] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-17 14:35:27] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-17 14:35:27] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@632383b9: startup date [Thu Jan 17 14:35:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 14:35:31] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=82e48de5-b848-3ac0-827f-bc5367cc3eab
[ INFO ] [2019-01-17 14:35:31] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:35:31] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:35:31] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca72680b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:35:32] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fc9f0e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:35:32] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e68c6b08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:35:33] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-17 14:35:33] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-17 14:35:33] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-17 14:35:33] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-17 14:35:33] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 6617 ms
[ INFO ] [2019-01-17 14:35:34] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-17 14:35:34] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-17 14:35:35] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6b33892a: startup date [Thu Jan 17 14:35:35 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@632383b9
[ INFO ] [2019-01-17 14:35:35] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 14:35:39] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 14:35:40] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:35:41] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ WARN ] [2019-01-17 14:35:41] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 14:35:41] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-17 14:35:41] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 14:35:41] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-17 14:35:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@632383b9: startup date [Thu Jan 17 14:35:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 14:35:41] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:35:41] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:35:42] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:35:42] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@632383b9: startup date [Thu Jan 17 14:35:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-17 14:35:42] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-17 14:35:43] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-17 14:35:43] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=632383b9,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-17 14:35:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-17 14:35:43] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 14:35:44] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-17 14:35:44] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547706944837 with initial instances count: 2
[ INFO ] [2019-01-17 14:35:44] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1547706944866, current=UP, previous=STARTING]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-17 14:35:44] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-17 14:35:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-17 14:35:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-17 14:35:45] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-17 14:35:45] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-17 14:35:45] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-17 14:35:45] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-17 14:35:45] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-17 14:35:45] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-17 14:35:45] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-17 14:35:45] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-17 14:35:46] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-17 14:35:46] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-17 14:35:46] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-17 14:35:46] com.demo.shop.ShopApplication -Started ShopApplication in 26.414 seconds (JVM running for 27.494)
[ INFO ] [2019-01-17 14:36:15] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring FrameworkServlet 'dispatcherServlet'
[ INFO ] [2019-01-17 14:36:15] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization started
[ INFO ] [2019-01-17 14:36:15] org.springframework.web.servlet.DispatcherServlet -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
[ INFO ] [2019-01-17 14:37:43] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64: startup date [Thu Jan 17 14:37:43 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-17 14:37:43] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-17 14:37:44] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:37:44] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8be9ed8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:37:44] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 14:37:45] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 14:37:46] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 14:37:46] com.netflix.discovery.DiscoveryClient -Not registering with Eureka server per configuration
[ INFO ] [2019-01-17 14:37:46] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547707066106 with initial instances count: 3
[ INFO ] [2019-01-17 14:37:46] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-17 14:37:48] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-shop-service, global-swagger,global-db, profiles=[default], label=master, version=null, state=null
[ INFO ] [2019-01-17 14:37:48] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-shop-service.yml'}]]
[ INFO ] [2019-01-17 14:37:48] com.demo.shop.ShopApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-17 14:37:48] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c3719e5: startup date [Thu Jan 17 14:37:48 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 14:37:50] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=82e48de5-b848-3ac0-827f-bc5367cc3eab
[ INFO ] [2019-01-17 14:37:50] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:37:50] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'com.demo.user.api.client.UserApiService' of type [org.springframework.cloud.netflix.feign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:37:51] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ca49bdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:37:51] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$bed1421c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:37:51] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a8be9ed8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:37:51] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6612 (http)
[ INFO ] [2019-01-17 14:37:51] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-17 14:37:51] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-17 14:37:51] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-17 14:37:51] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 3637 ms
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-17 14:37:52] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5c930fc3: startup date [Thu Jan 17 14:37:52 CST 2019]; parent: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c3719e5
[ INFO ] [2019-01-17 14:37:53] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:37:54] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryShop],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.shop.api.dto.rsp.ShopDto>> com.demo.shop.controller.ShopControllerImpl.queryShop(com.demo.shop.api.dto.req.queryShopReq)
[ INFO ] [2019-01-17 14:37:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 14:37:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-17 14:37:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-17 14:37:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-17 14:37:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.api.client.UserApiService.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-17 14:37:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public abstract com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.api.client.UserApiService.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-17 14:37:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 14:37:55] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-17 14:37:56] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ WARN ] [2019-01-17 14:37:56] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 14:37:56] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-17 14:37:56] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 14:37:56] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-17 14:37:57] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c3719e5: startup date [Thu Jan 17 14:37:48 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 14:37:57] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:37:57] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:37:57] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:37:58] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c3719e5: startup date [Thu Jan 17 14:37:48 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-17 14:37:58] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-17 14:37:58] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-17 14:37:58] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-17 14:37:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 14:37:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:37:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:37:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:37:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:37:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:37:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:37:58] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-17 14:37:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-17 14:37:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-17 14:37:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-17 14:37:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=c3719e5,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-17 14:37:59] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-17 14:37:59] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 14:37:59] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-17 14:37:59] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 14:37:59] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 14:37:59] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:37:59] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:37:59] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 14:37:59] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547707080090 with initial instances count: 3
[ INFO ] [2019-01-17 14:38:00] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-shop-service with eureka with status UP
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1547707080125, current=UP, previous=STARTING]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612: registering service...
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-17 14:38:00] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-SHOP-SERVICE/10.10.1.210:6612 - registration status: 204
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-17 14:38:00] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-17 14:38:00] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-17 14:38:00] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-17 14:38:00] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-17 14:38:03] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-17 14:38:03] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6612"]
[ INFO ] [2019-01-17 14:38:03] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-17 14:38:03] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6612 (http)
[ INFO ] [2019-01-17 14:38:03] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6612
[ INFO ] [2019-01-17 14:38:03] com.demo.shop.ShopApplication -Started ShopApplication in 20.559 seconds (JVM running for 21.381)
[ INFO ] [2019-01-17 14:39:09] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:39:24] org.springframework.context.annotation.AnnotationConfigApplicationContext -Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64: startup date [Thu Jan 17 14:39:24 CST 2019]; root of context hierarchy
[ INFO ] [2019-01-17 14:39:24] org.hibernate.validator.internal.util.Version -HV000001: Hibernate Validator 6.0.2.Final
[ INFO ] [2019-01-17 14:39:24] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:39:24] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$989618e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:39:25] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 14:39:25] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 14:39:26] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 14:39:27] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 14:39:27] com.netflix.discovery.DiscoveryClient -Not registering with Eureka server per configuration
[ INFO ] [2019-01-17 14:39:27] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547707167249 with initial instances count: 3
[ INFO ] [2019-01-17 14:39:27] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Fetching config from server at: http://10.10.1.210:7742/
[ INFO ] [2019-01-17 14:39:29] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator -Located environment: name=demo-user-service, global-swagger,global-db, profiles=[dev], label=master, version=null, state=null
[ INFO ] [2019-01-17 14:39:29] org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration -Located property source: CompositePropertySource [name='configService', propertySources=[MapPropertySource {name='classpath:/config/dev/global-db.yml'}, MapPropertySource {name='classpath:/config/dev/demo-user-service.yml'}]]
[ INFO ] [2019-01-17 14:39:29] com.demo.user.UserApplication -No active profile set, falling back to default profiles: default
[ INFO ] [2019-01-17 14:39:29] org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55e1192: startup date [Thu Jan 17 14:39:29 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 14:39:32] org.springframework.cloud.context.scope.GenericScope -BeanFactory id=1d6abac0-ede3-3cdf-aa51-5e4b4b47324b
[ INFO ] [2019-01-17 14:39:32] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor -JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[ INFO ] [2019-01-17 14:39:33] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7c7c15e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:39:33] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$aea8bc29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:39:33] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker -Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$989618e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[ INFO ] [2019-01-17 14:39:33] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat initialized with port(s): 6608 (http)
[ INFO ] [2019-01-17 14:39:33] org.apache.catalina.core.StandardService -Starting service [Tomcat]
[ INFO ] [2019-01-17 14:39:33] org.apache.catalina.core.StandardEngine -Starting Servlet Engine: Apache Tomcat/8.5.20
[ INFO ] [2019-01-17 14:39:33] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] -Initializing Spring embedded WebApplicationContext
[ INFO ] [2019-01-17 14:39:33] org.springframework.web.context.ContextLoader -Root WebApplicationContext: initialization completed in 4277 ms
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'dispatcherServlet' to [/]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.ServletRegistrationBean -Mapping servlet: 'statViewServlet' to [/druid/*]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'metricsFilter' to: [/*]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'characterEncodingFilter' to: [/*]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'httpPutFormContentFilter' to: [/*]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'requestContextFilter' to: [/*]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webRequestLoggingFilter' to: [/*]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'webStatFilter' to urls: [/*]
[ INFO ] [2019-01-17 14:39:34] org.springframework.boot.web.servlet.FilterRegistrationBean -Mapping filter: 'applicationContextIdFilter' to: [/*]
[ INFO ] [2019-01-17 14:39:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserDto],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultPageBean<java.util.List<com.demo.user.api.dto.rsp.UserDto>> com.demo.user.controller.UserControllerImpl.queryUserDto(com.demo.user.api.dto.req.QueryUserReq)
[ INFO ] [2019-01-17 14:39:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/user/queryUserById],methods=[POST],consumes=[application/json;charset=UTF-8],produces=[application/json;charset=UTF-8]}" onto public com.demo.common.structure.ResultBean<com.demo.user.api.dto.rsp.UserDto> com.demo.user.controller.UserControllerImpl.queryUserById(com.demo.user.api.dto.req.QueryShopById)
[ INFO ] [2019-01-17 14:39:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 14:39:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
[ INFO ] [2019-01-17 14:39:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
[ INFO ] [2019-01-17 14:39:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
[ INFO ] [2019-01-17 14:39:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[ INFO ] [2019-01-17 14:39:38] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[ INFO ] [2019-01-17 14:39:39] org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping -Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[ WARN ] [2019-01-17 14:39:41] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 14:39:41] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ WARN ] [2019-01-17 14:39:41] com.netflix.config.sources.URLConfigurationSource -No URLs will be polled as dynamic configuration sources.
[ INFO ] [2019-01-17 14:39:41] com.netflix.config.sources.URLConfigurationSource -To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[ INFO ] [2019-01-17 14:39:41] org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55e1192: startup date [Thu Jan 17 14:39:29 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64
[ INFO ] [2019-01-17 14:39:41] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:39:41] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:39:41] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[ INFO ] [2019-01-17 14:39:42] org.springframework.ui.freemarker.SpringTemplateLoader -SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55e1192: startup date [Thu Jan 17 14:39:29 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@12bd8a64] and template loader path [classpath:/templates/]
[ INFO ] [2019-01-17 14:39:42] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer -ClassTemplateLoader for Spring macros added to FreeMarker configuration
[ INFO ] [2019-01-17 14:39:43] com.netflix.discovery.DiscoveryClient -Shutting down DiscoveryClient ...
[ INFO ] [2019-01-17 14:39:43] com.netflix.discovery.DiscoveryClient -Completed shut down of DiscoveryClient
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'environmentManager' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'restartEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Bean with name 'refreshScope' has been autodetected for JMX exposure
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=55e1192,type=ConfigurationPropertiesRebinder]
[ INFO ] [2019-01-17 14:39:43] org.springframework.jmx.export.annotation.AnnotationMBeanExporter -Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[ INFO ] [2019-01-17 14:39:43] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Registering beans for JMX exposure on startup
[ INFO ] [2019-01-17 14:39:44] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 0
[ INFO ] [2019-01-17 14:39:44] org.springframework.cloud.netflix.eureka.InstanceInfoFactory -Setting initial instance status as: STARTING
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Initializing Eureka in region us-east-1
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON encoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using JSON decoding codec LegacyJacksonJson
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML encoding codec XStreamXml
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.provider.DiscoveryJerseyProvider -Using XML decoding codec XStreamXml
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver -Resolving eureka endpoints via configuration
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Disable delta property : false
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Single vip registry refresh property : null
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Force full registry fetch : false
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Application is null : false
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Registered Applications size is zero : true
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Application version is -1: true
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Getting all instance registry info from the eureka server
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -The response status is 200
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Starting heartbeat executor: renew interval is: 30
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.InstanceInfoReplicator -InstanceInfoReplicator onDemand update allowed rate per min is 4
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Discovery Client initialized at timestamp 1547707184681 with initial instances count: 3
[ INFO ] [2019-01-17 14:39:44] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry -Registering application demo-user-service with eureka with status UP
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -Saw local status change event StatusChangeEvent [timestamp=1547707184729, current=UP, previous=STARTING]
[ INFO ] [2019-01-17 14:39:44] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-USER-SERVICE/10.10.1.210:6608: registering service...
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter -Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[ INFO ] [2019-01-17 14:39:44] org.springframework.context.support.DefaultLifecycleProcessor -Starting beans in phase 2147483647
[ INFO ] [2019-01-17 14:39:44] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Context refreshed
[ INFO ] [2019-01-17 14:39:45] com.netflix.discovery.DiscoveryClient -DiscoveryClient_DEMO-USER-SERVICE/10.10.1.210:6608 - registration status: 204
[ INFO ] [2019-01-17 14:39:46] springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper -Found 1 custom documentation plugin(s)
[ INFO ] [2019-01-17 14:39:46] springfox.documentation.spring.web.scanners.ApiListingReferenceScanner -Scanning for api listing references
[ INFO ] [2019-01-17 14:39:51] org.apache.coyote.http11.Http11NioProtocol -Initializing ProtocolHandler ["http-nio-6608"]
[ INFO ] [2019-01-17 14:39:51] org.apache.coyote.http11.Http11NioProtocol -Starting ProtocolHandler ["http-nio-6608"]
[ INFO ] [2019-01-17 14:39:54] org.apache.tomcat.util.net.NioSelectorPool -Using a shared selector for servlet write/read
[ INFO ] [2019-01-17 14:39:54] org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer -Tomcat started on port(s): 6608 (http)
[ INFO ] [2019-01-17 14:39:54] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration -Updating port to 6608
[ INFO ] [2019-01-17 14:39:54] com.demo.user.UserApplication -Started UserApplication in 30.873 seconds (JVM running for 31.837)
